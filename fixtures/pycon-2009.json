[
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "PyMite: Python on a chip\n<br /><br />\nLightning talk at PyCon 2009 by James Snyder\n<br /><br />\n\"a significant subset of the Python language on microcontrollers without an OS. Lets Python run in a BILLION new places.\"\n<br /><br />\n<a href=\"http://www.pythononachip.org/\">http://www.pythononachip.org/</a>", 
            "embed": "<embed src=\"http://blip.tv/play/g%2BRygZCxQgI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--pymite--python-on-a-chip", 
            "speakers": [], 
            "summary": "", 
            "tags": [], 
            "thumbnail_url": "http://a.images.blip.tv/CarlFK-PyMite410-91.jpg", 
            "title": "PyCon 2009: PyMite: Python-on-a-chip", 
            "updated": "2009-07-09T04:00:00+00:00", 
            "video_ogv_length": "211712286", 
            "video_ogv_url": "http://blip.tv/file/get/CarlFK-PyMite410.ogv"
        }, 
        "model": "videos.Video", 
        "pk": 136
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nFor many of us, Python has dramatically changed our professional life: Open Source, technologies that get the job done, and let you learn and improve every day, a friendly and mature community, etc. Python is important! For learning, for science, for business, and for progress in general.", 
            "embed": "<embed src=\"http://blip.tv/play/g4VigYGNAwI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--giving-back-and-helping-expand-the-py", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                233
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-GivingBackAndHelpingExpandThePythonCommunityARoadmapFo605-542.jpg", 
            "title": "PyCon 2009: Giving back and helping expand the Python community. A roadmap for South America and Africa (#87)", 
            "updated": "2009-05-12T17:46:42+00:00", 
            "video_mp4_length": "109064829", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-GivingBackAndHelpingExpandThePythonCommunityARoadmapFo605.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 137
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.\n<br /><br />\n[VIDEO HAS ISSUES: blurry vga] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_%2B0qAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--django-in-the-real-world--part-3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                231, 
                232, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DjangoInTheRealWorldPart003327-984.jpg", 
            "title": "PyCon 2009: Django in the Real World (Part 3 of 3)", 
            "updated": "2009-05-07T12:59:34+00:00", 
            "video_mp4_length": "277898087", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DjangoInTheRealWorldPart003327.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 138
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.\n<br /><br />\n[VIDEO HAS ISSUES: blurry vga] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_%2BxcAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--django-in-the-real-world--part-2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                231, 
                232, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DjangoInTheRealWorldPart002548-829.jpg", 
            "title": "PyCon 2009: Django in the Real World (Part 2 of 3)", 
            "updated": "2009-05-07T12:41:41+00:00", 
            "video_mp4_length": "1044813140", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DjangoInTheRealWorldPart002548.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 139
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.\n<br /><br />\n[VIDEO HAS ISSUES: blurry vga] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_%2BoQAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--django-in-the-real-world--part-1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                231, 
                232, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DjangoInTheRealWorldPart001795-302.jpg", 
            "title": "PyCon 2009: Django in the Real World (Part 1 of 3)", 
            "updated": "2009-05-07T11:32:46+00:00", 
            "video_mp4_length": "1039606437", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DjangoInTheRealWorldPart001795.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 140
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nDjango 1.0 was released in September 2008. This release marks a major turning point in Django's development; a real maturation of the project. Join the lead developers of Django as they discuss what's new in Django 1.0, cover the Django 1.1 release (currently scheduled for a few weeks before PyCon), and discuss the project's future.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_95nAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the-state-of-django---76", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheStateOfDjango948-11.jpg", 
            "title": "PyCon 2009: The State of Django (#76)", 
            "updated": "2009-05-07T02:18:45+00:00", 
            "video_mp4_length": "93483383", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheStateOfDjango948.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 141
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Pylons on Jython\n<br /><br />\nPresented by Philip Jenvey\n<br /><br />\nJython is back, and better than ever.\n<br /><br />\n[VIDEO HAS ISSUES: house audio] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_95DAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--pylons-on-jython---96", 
            "speakers": [
                75
            ], 
            "summary": "", 
            "tags": [
                235, 
                236, 
                237, 
                238, 
                231, 
                239, 
                240, 
                241
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PylonsOnJython681-237.jpg", 
            "title": "PyCon 2009: Pylons on Jython (#96)", 
            "updated": "2009-05-07T02:00:07+00:00", 
            "video_mp4_length": "102996234", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PylonsOnJython681.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 142
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: house audio] Django is the most popular Python web framework, and the final release of Jython 2.5 should be available a couple of months before PyCon. This means we can now use a modern Python web framework on top of Java infrastructure by running Django on Jython. In this talk, we will show examples of how to use this combination, engage a discussion about what can take the Python (and Django) community from the Java world, especially the necessary infrastructure bits, and how a Django/Jython stack compares with other JVM web stacks like JRuby on Rails.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_94xAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--django-on-jython---101", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                9, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DjangoOnJython963-962.jpg", 
            "title": "PyCon 2009: Django on Jython (#101)", 
            "updated": "2009-05-07T01:52:51+00:00", 
            "video_mp4_length": "133505783", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DjangoOnJython963.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 143
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nby Brett Cannon What sprinting is: a group of people doing something together. Who goes: everyone! Why: fun, great learning, you can do it your way How: get a table, some chairs, some people...\n\n", 
            "embed": "<script type=\"text/javascript\" src=\"http://s3.www.universalsubtitles.org/embed.js\">\n(\n  {\"video_url\": \"http://blip.tv/file/get/Pycon-PlenaryIntroToSprinting511.flv\"}\n)\n</script>", 
            "category": 5, 
            "slug": "pycon-2009--plenary--intro-to-sprinting", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                242
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PlenaryIntroToSprinting227-400.jpg", 
            "title": "PyCon 2009: Plenary: Intro to Sprinting", 
            "updated": "2009-05-07T00:34:09+00:00", 
            "video_mp4_length": "19611924", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PlenaryIntroToSprinting227.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 144
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nSteve Holden, Chairman of the Python Software Foundation, reflects on the meaning of the phrase \"the Python community\" and the changes that have taken place in the PSF in the last year. He discusses further possible changes that could turn the PSF into a more \"community-facing\" organization, and solicits your input on what kind of projects and activities it should be supporting.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_9goAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the-state-of-the-python-community--le", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                11, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheStateOfThePythonCommunityLeadingThePythonTribe902-75.jpg", 
            "title": "PyCon 2009: The State of the Python Community: Leading the Python tribe (#118)", 
            "updated": "2009-05-06T21:19:36+00:00", 
            "video_mp4_length": "214255799", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheStateOfThePythonCommunityLeadingThePythonTribe902.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 145
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "The (lack of) design patterns in Python\n<br /><br />\nPresented at PyCon 2009 by Joe Gregorio\n<br /><br />\nThere is a distinct lack of Design Patterns discussed in relation to Python. Are the communities ignorant of Design Patterns or is there something else going on here? This talk is based on my well-trafficked article \"Python isn't just Java without the compile\" and expands on that article by using Design Patterns as a crude metric of gaps in a programming language.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_9ZkAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the--lack-of--design-patterns-in-pyth", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                243, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheLackOfDesignPatternsInPython277-764.jpg", 
            "title": "PyCon 2009: The (lack of) design patterns in Python (#60)", 
            "updated": "2009-05-06T20:22:11+00:00", 
            "video_mp4_length": "67685346", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheLackOfDesignPatternsInPython277.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 146
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nThere are many deployment options for Python code. I'll share what has worked well for me on Windows, packaging command line tools and services using py2exe and InnoSetup. I'll demonstrate a simple build script which creates windows binaries and an InnoSetup installer in one step. In addition, I'll go over common errors which come up when using py2exe and hints on troubleshooting them. This is a short talk, so there will be a follow-up Open Space session to share experience and help each other solve distribution problems.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_84JAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--how-i-distribute-python-applications-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                244, 
                245, 
                231, 
                232, 
                246
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-HowIDistributePythonApplicationsOnWindowsPy2exeInnoSet226-152.jpg", 
            "title": "PyCon 2009: How I Distribute Python applications on Windows - py2exe &amp; InnoSetup (#108)", 
            "updated": "2009-05-06T15:51:21+00:00", 
            "video_mp4_length": "108923319", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-HowIDistributePythonApplicationsOnWindowsPy2exeInnoSet226.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 147
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: no audio first 1.5m] If you've ever created a nifty application that makes people's lives easier you know the truly hard part is convincing others to use it. One way to increase the number of people installing your software is to convince Linux distributions to package your software so that their end users can install by using the system tools they're used to. One way of convincing them is by making your application easy to package.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_5I4Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--how-to-build-applications-linux-distr", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                247, 
                152, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-HowToBuildApplicationsLinuxDistributionsWillPackage235-266.jpg", 
            "title": "PyCon 2009: How to Build Applications Linux Distributions will Package (#78)", 
            "updated": "2009-05-04T23:30:34+00:00", 
            "video_mp4_length": "126822207", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-HowToBuildApplicationsLinuxDistributionsWillPackage235.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 148
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nPuzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_r0jAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--eggs-and-buildout-deployment-in-pytho", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                248, 
                249, 
                231, 
                232, 
                146, 
                250
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-EggsAndBuildoutDeploymentInPythonPart003314-551.jpg", 
            "title": "PyCon 2009: Eggs and Buildout Deployment in Python (Part 3 of 3)", 
            "updated": "2009-05-01T21:06:16+00:00", 
            "video_mp4_length": "278651748", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-EggsAndBuildoutDeploymentInPythonPart003314.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 149
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nPuzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_rx1Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--eggs-and-buildout-deployment-in-pyth0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                248, 
                249, 
                231, 
                232, 
                146, 
                250
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-EggsAndBuildoutDeploymentInPythonPart002487-443.jpg", 
            "title": "PyCon 2009: Eggs and Buildout Deployment in Python (Part 2 of 3)", 
            "updated": "2009-05-01T20:48:24+00:00", 
            "video_mp4_length": "1043465996", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-EggsAndBuildoutDeploymentInPythonPart002487.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 150
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nPuzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_rtXAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--eggs-and-buildout-deployment-in-pyth1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                248, 
                249, 
                231, 
                232, 
                146, 
                250
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-EggsAndBuildoutDeploymentInPythonPart001587-862.jpg", 
            "title": "PyCon 2009: Eggs and Buildout Deployment in Python (Part 1 of 3)", 
            "updated": "2009-05-01T19:39:26+00:00", 
            "video_mp4_length": "1041103294", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-EggsAndBuildoutDeploymentInPythonPart001587.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 151
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web applications and host them on Google hardware. This hands on tutorial will walk you through the steps of building a basic web application, from setting up the SDK through to using the major APIs that App Engine provides.", 
            "embed": "<embed src=\"http://blip.tv/play/Af6mKgI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--an-introduction-to-google-app-engine-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                251, 
                252, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AnIntroductionToGoogleAppEnginePart001520-885.jpg", 
            "title": "PyCon 2009: An Introduction to Google App Engine (Part 1 of 2)", 
            "updated": "2009-05-01T04:26:39+00:00", 
            "video_mp4_length": "1042140539", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AnIntroductionToGoogleAppEnginePart001520.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 152
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web applications and host them on Google hardware. This hands on tutorial will walk you through the steps of building a basic web application, from setting up the SDK through to using the major APIs that App Engine provides.", 
            "embed": "<embed src=\"http://blip.tv/play/Af6lIwI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--an-introduction-to-google-app-engine0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                251, 
                252, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AnIntroductionToGoogleAppEnginePart002235-499.jpg", 
            "title": "PyCon 2009: An Introduction to Google App Engine (Part 2 of 2)", 
            "updated": "2009-05-01T03:19:23+00:00", 
            "video_mp4_length": "980969103", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AnIntroductionToGoogleAppEnginePart002235.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 153
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<a href=\"http://blip.tv/file/2023897\"></a>\n<br />\n\nSQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", 
            "embed": "", 
            "category": 5, 
            "slug": "pycon-2009--advanced-sqlalchemy--part-2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AdvancedSQLAlchemyPart002668-996.jpg", 
            "title": "PyCon 2009: Advanced SQLAlchemy (Part 2 of 3)", 
            "updated": "2009-04-22T14:50:13+00:00"
        }, 
        "model": "videos.Video", 
        "pk": 154
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nSQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", 
            "embed": "<embed src=\"http://blip.tv/play/AfySJwI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--advanced-sqlalchemy--part-1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AdvancedSQLAlchemyPart001250-190.jpg", 
            "title": "PyCon 2009: Advanced SQLAlchemy (Part 1 of 3)", 
            "updated": "2009-04-22T13:40:37+00:00", 
            "video_mp4_length": "1039887585", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AdvancedSQLAlchemyPart001250.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 155
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nSQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", 
            "embed": "<embed src=\"http://blip.tv/play/AfyQQAI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--advanced-sqlalchemy--part-3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AdvancedSQLAlchemyPart003534-288.jpg", 
            "title": "PyCon 2009: Advanced SQLAlchemy (Part 3 of 3)", 
            "updated": "2009-04-22T12:33:16+00:00", 
            "video_mp4_length": "331064645", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AdvancedSQLAlchemyPart003534.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 156
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 401: Some Advanced Topics (Part 3 of 3)\n<br /><br />\nSteve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_I9jAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-401--some-advanced-topics--par", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python401SomeAdvancedTopicsPart003305-184.jpg", 
            "title": "PyCon 2009: Python 401: Some Advanced Topics (Part 3 of 3)", 
            "updated": "2009-04-22T12:06:50+00:00", 
            "video_mp4_length": "71704968", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python401SomeAdvancedTopicsPart003305.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 157
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 401: Some Advanced Topics\n<br /><br />\nSteve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_I9QAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-401--some-advanced-topics--pa0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python401SomeAdvancedTopicsPart001455-299.jpg", 
            "title": "PyCon 2009: Python 401: Some Advanced Topics (Part 1 of 3)", 
            "updated": "2009-04-22T12:02:27+00:00", 
            "video_mp4_length": "1039937869", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python401SomeAdvancedTopicsPart001455.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 158
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 401: Some Advanced Topics (Part 2 of 3)\n<br /><br />\nSteve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_I4LAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-401--some-advanced-topics--pa1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python401SomeAdvancedTopicsPart002889-455.jpg", 
            "title": "PyCon 2009: Python 401: Some Advanced Topics (Part 2 of 3)", 
            "updated": "2009-04-22T10:55:15+00:00", 
            "video_mp4_length": "1044417926", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python401SomeAdvancedTopicsPart002889.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 159
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now becoming not only easier, but quite elegant and simple, thanks to Kamaelia. Kamaelia is an interesting component based framework originating from BBC research. It accomplishes concurrent processing of data from and to many protocols. Components easily connect and pass data from and to each other. We are going to explore Kamaelia's strengths and possibilities, by running simple examples, then trying nested protocol support, and maybe some other fun examples if time permits.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IwYAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--easy-concurrency-with-kamaelia--part-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                255, 
                256, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-EasyConcurrencyWithKamaeliaPart002761-912.jpg", 
            "title": "PyCon 2009: Easy Concurrency with Kamaelia (Part 2 of 2)", 
            "updated": "2009-04-22T09:42:57+00:00", 
            "video_mp4_length": "258938777", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-EasyConcurrencyWithKamaeliaPart002761.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 160
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now becoming not only easier, but quite elegant and simple, thanks to Kamaelia. Kamaelia is an interesting component based framework originating from BBC research. It accomplishes concurrent processing of data from and to many protocols. Components easily connect and pass data from and to each other. We are going to explore Kamaelia's strengths and possibilities, by running simple examples, then trying nested protocol support, and maybe some other fun examples if time permits.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IthAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--easy-concurrency-with-kamaelia--part0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                255, 
                256, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-EasyConcurrencyWithKamaeliaPart001786-408.jpg", 
            "title": "PyCon 2009: Easy Concurrency with Kamaelia (Part 1 of 2)", 
            "updated": "2009-04-22T09:26:20+00:00", 
            "video_mp4_length": "1039893237", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-EasyConcurrencyWithKamaeliaPart001786.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 161
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_Io3Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "introduction-to-object-oriented-programming--2-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                257, 
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AnIntroductionToObjectOrientedProgrammingPart002427-35.jpg", 
            "title": "Introduction to Object-Oriented Programming (2 of 3)", 
            "updated": "2009-04-22T08:15:52+00:00", 
            "video_mp4_length": "1044767286", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AnIntroductionToObjectOrientedProgrammingPart002427.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 162
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IkdAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "introduction-to-object-oriented-programming--3-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                257, 
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AnIntroductionToObjectOrientedProgrammingPart003468-379.jpg", 
            "title": "Introduction to Object-Oriented Programming (3 of 3)", 
            "updated": "2009-04-22T07:08:15+00:00", 
            "video_mp4_length": "440216639", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AnIntroductionToObjectOrientedProgrammingPart003468.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 163
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IhiAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "introduction-to-object-oriented-programming--1-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                257, 
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AnIntroductionToObjectOrientedProgrammingPart001419-665.jpg", 
            "title": "Introduction to Object-Oriented Programming (1 of 3)", 
            "updated": "2009-04-22T06:40:04+00:00", 
            "video_mp4_length": "1039666568", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AnIntroductionToObjectOrientedProgrammingPart001419.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 164
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IdlAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--scrape-the-web--strategies-for-progra", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                129
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp443-212.jpg", 
            "title": "PyCon 2009: Scrape the Web: Strategies for programming websites that don&#39;t expect it (Part 2 of 3)", 
            "updated": "2009-04-22T05:27:22+00:00", 
            "video_mp4_length": "1044269303", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp443.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 165
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IZTAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--scrape-the-web--strategies-for-progr0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                129
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp472-193.jpg", 
            "title": "PyCon 2009: Scrape the Web: Strategies for programming websites that don&#39;t expect it (Part 1 of 3)", 
            "updated": "2009-04-22T04:19:50+00:00", 
            "video_mp4_length": "1040169022", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp472.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 166
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IU6Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--scrape-the-web--strategies-for-progr1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                129
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp728-232.jpg", 
            "title": "PyCon 2009: Scrape the Web: Strategies for programming websites that don&#39;t expect it (Part 3 of 3)", 
            "updated": "2009-04-22T03:12:16+00:00", 
            "video_mp4_length": "173449267", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ScrapeTheWebStrategiesForProgrammingWebsitesThatDontExp728.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 167
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nWelcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IUMAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "tour-of-python-standard-library--3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258, 
                259
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ATourOfPythonStandardLibraryPart003650-998.jpg", 
            "title": "Tour of Python Standard Library (3 of 3)", 
            "updated": "2009-04-22T02:56:30+00:00", 
            "video_mp4_length": "243491007", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ATourOfPythonStandardLibraryPart003650.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 168
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nWelcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IRuAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "a-tour-of-python-standard-library--1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258, 
                259
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ATourOfPythonStandardLibraryPart001265-956.jpg", 
            "title": "A Tour of Python Standard Library (1 of 3)", 
            "updated": "2009-04-22T02:41:03+00:00", 
            "video_mp4_length": "1040393588", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ATourOfPythonStandardLibraryPart001265.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 169
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nWelcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_INnAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "a-tour-of-python-standard-library--2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258, 
                259
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ATourOfPythonStandardLibraryPart002810-659.jpg", 
            "title": "A Tour of Python Standard Library (2 of 3)", 
            "updated": "2009-04-22T01:33:25+00:00", 
            "video_mp4_length": "1044059016", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ATourOfPythonStandardLibraryPart002810.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 170
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you interested in building web applications with modern libraries and tools? Do you want to build on top of the work that many others have done? Have you done some basic web development, but want to be more productive. If so this is the class for you. TurboGears 2 provides a well defined set of the best libraries for web development python has to offer. But more importantly it brings them together in a clean, well documented way that allows for developing reusable TurboGears 2 components. The result is a powerful, flexible, set of tools that helps make it easy to build dynamic web applications.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IJYAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-turbogears2-and-wsgi-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                230, 
                234, 
                225
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToTurboGears2WSGIPart002136-550.jpg", 
            "title": "PyCon 2009: Introduction to TurboGears2 and WSGI (Part 2 of 2)", 
            "updated": "2009-04-22T00:20:59+00:00", 
            "video_mp4_length": "667459323", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToTurboGears2WSGIPart002136.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 171
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you interested in building web applications with modern libraries and tools? Do you want to build on top of the work that many others have done? Have you done some basic web development, but want to be more productive. If so this is the class for you. TurboGears 2 provides a well defined set of the best libraries for web development python has to offer. But more importantly it brings them together in a clean, well documented way that allows for developing reusable TurboGears 2 components. The result is a powerful, flexible, set of tools that helps make it easy to build dynamic web applications.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi_IF9Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-turbogears2-and-wsgi0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                230, 
                234, 
                225
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToTurboGears2WSGIPart001522-886.jpg", 
            "title": "PyCon 2009: Introduction to TurboGears2 and WSGI (Part 1 of 2)", 
            "updated": "2009-04-21T23:37:52+00:00", 
            "video_mp4_length": "1039958457", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToTurboGears2WSGIPart001522.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 172
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHaven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bu51Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--building-real-time-network-applicatio", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                260, 
                261, 
                231, 
                232, 
                162, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted226-383.jpg", 
            "title": "PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 1 of 3)", 
            "updated": "2009-04-16T22:02:58+00:00", 
            "video_mp4_length": "1039250040", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted226.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 173
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHaven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bu1NAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--building-real-time-network-applicati0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                260, 
                261, 
                231, 
                232, 
                162, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted150-71.jpg", 
            "title": "PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 3 of 3)", 
            "updated": "2009-04-16T20:55:48+00:00", 
            "video_mp4_length": "571881838", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted150.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 174
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHaven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BuxgAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--building-real-time-network-applicati1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                260, 
                261, 
                231, 
                232, 
                162, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted900-383.jpg", 
            "title": "PyCon 2009: Building Real-time Network applications for the web with Twisted and Orbited (Part 2 of 3)", 
            "updated": "2009-04-16T20:18:56+00:00", 
            "video_mp4_length": "1044634117", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-BuildingRealtimeNetworkApplicationsForTheWebWithTwisted900.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 175
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the basics of functional testing of web applications. Is your app rendered as plain HTML? Great! We'll show you how to build a test suite for it. Is your app all AJAXy? No problem! We can do that too! We're going to write a web application, first in straight html and then with AJAX, and show you how to try to break it. At the end of this hands-on session, you'll be able to write tests for almost any web site, using all open-source tools and our favorite language - Python.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BupnAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-functional-web-testin", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                262, 
                263
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToFunctionalWebTestingWithTwillSeleniumPart789-569.jpg", 
            "title": "PyCon 2009: Introduction to Functional Web Testing With Twill &amp; Selenium (Part 1 of 2)", 
            "updated": "2009-04-16T19:05:05+00:00", 
            "video_mp4_length": "1039565189", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToFunctionalWebTestingWithTwillSeleniumPart789.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 176
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the basics of functional testing of web applications. Is your app rendered as plain HTML? Great! We'll show you how to build a test suite for it. Is your app all AJAXy? No problem! We can do that too! We're going to write a web application, first in straight html and then with AJAX, and show you how to try to break it. At the end of this hands-on session, you'll be able to write tests for almost any web site, using all open-source tools and our favorite language - Python.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BuhjAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-functional-web-testi0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                262, 
                263
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToFunctionalWebTestingWithTwillSeleniumPart575-241.jpg", 
            "title": "PyCon 2009: Introduction to Functional Web Testing With Twill &amp; Selenium (Part 2 of 2)", 
            "updated": "2009-04-16T17:56:45+00:00", 
            "video_mp4_length": "796569395", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToFunctionalWebTestingWithTwillSeleniumPart575.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 177
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "py.test II - cross-platform and distributed testing (part 2 of 3)\n<br /><br />\nWant to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BucHAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--py-test-ii---cross-platform-and-distr", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                264, 
                231, 
                232, 
                265, 
                21, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-pytestIICrossplatformAndDistributedTestingPart002432-993.jpg", 
            "title": "PyCon 2009: py.test II - cross-platform and distributed testing (Part 2 of 3)", 
            "updated": "2009-04-16T17:01:04+00:00", 
            "video_mp4_length": "1044433842", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-pytestIICrossplatformAndDistributedTestingPart002432.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 178
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "py.test II - cross-platform and distributed testing (part 3 of 3)\n<br /><br />\nWant to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BuUFAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--py-test-ii---cross-platform-and-dist0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                264, 
                231, 
                232, 
                265, 
                21, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-pytestIICrossplatformAndDistributedTestingPart003549-578.jpg", 
            "title": "PyCon 2009: py.test II - cross-platform and distributed testing (Part 3 of 3)", 
            "updated": "2009-04-16T15:53:10+00:00", 
            "video_mp4_length": "283460154", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-pytestIICrossplatformAndDistributedTestingPart003549.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 179
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "py.test II - cross-platform and distributed testing (part 1 of 3)\n<br /><br />\nWant to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BuQxAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--py-test-ii---cross-platform-and-dist1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                264, 
                231, 
                232, 
                265, 
                21, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-pytestIICrossplatformAndDistributedTestingPart001669-109.jpg", 
            "title": "PyCon 2009: py.test II - cross-platform and distributed testing (Part 1 of 3)", 
            "updated": "2009-04-16T15:34:52+00:00", 
            "video_mp4_length": "1039956019", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-pytestIICrossplatformAndDistributedTestingPart001669.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 180
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part 1 of 3)\n<br /><br />\nPresented by Chris McDonough\n<br /><br />\nAre you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BuFgAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the-big-f--39-ing-tutorial--developme", 
            "speakers": [
                76
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                266, 
                267, 
                234, 
                217
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew393-62.jpg", 
            "title": "PyCon 2009: The Big F&#39;ing Tutorial: Development Using the repoze.bfg Web Framework (Part 1 of 3)", 
            "updated": "2009-04-16T14:21:22+00:00", 
            "video_mp4_length": "1038946752", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew393.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 181
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part 2 of 3)\n<br /><br />\nPresented by Chris McDonough\n<br /><br />\nAre you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bt82Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the-big-f--39-ing-tutorial--developm0", 
            "speakers": [
                76
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                266, 
                267, 
                234, 
                217
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew328-574.jpg", 
            "title": "PyCon 2009: The Big F&#39;ing Tutorial: Development Using the repoze.bfg Web Framework (Part 2 of 3)", 
            "updated": "2009-04-16T13:12:06+00:00", 
            "video_mp4_length": "1044696493", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew328.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 182
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "The Big F'ing Tutorial: Development Using repoze.bfg Web Framework (Part 3 of 3)\n<br /><br />\nPresented by Chris McDonough\n<br /><br />\nAre you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.\n<br /><br />\n[VIDEO HAS ISSUES: ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bt0mAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--the-big-f--39-ing-tutorial--developm1", 
            "speakers": [
                76
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                266, 
                267, 
                234, 
                217
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew545-594.jpg", 
            "title": "PyCon 2009: The Big F&#39;ing Tutorial: Development Using the repoze.bfg Web Framework (Part 3 of 3)", 
            "updated": "2009-04-16T12:04:30+00:00", 
            "video_mp4_length": "445324405", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-TheBigFingTutorialDevelopmentUsingTheRepozebfgWebFramew545.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 183
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Internet Programming with Python (part 2 of 3)\n<br /><br />\nPresented by Wesley J. Chun\n<br /><br />\nThis tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtwgAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--internet-programming-with-python--par", 
            "speakers": [
                77
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                234, 
                268
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-InternetProgrammingWithPythonPart002475-80.jpg", 
            "title": "PyCon 2009: Internet Programming with Python (Part 2 of 3)", 
            "updated": "2009-04-16T11:30:05+00:00", 
            "video_mp4_length": "1044447826", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-InternetProgrammingWithPythonPart002475.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 184
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Internet Programming with Python (part 1 of 3)\n<br /><br />\nPresented by Wesley J. Chun\n<br /><br />\nThis tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtpGAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--internet-programming-with-python--pa0", 
            "speakers": [
                77
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                234, 
                268
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-InternetProgrammingWithPythonPart001603-459.jpg", 
            "title": "PyCon 2009: Internet Programming with Python (Part 1 of 3)", 
            "updated": "2009-04-16T10:22:30+00:00", 
            "video_mp4_length": "1039979119", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-InternetProgrammingWithPythonPart001603.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 185
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Internet Programming with Python (part 3 of 3)\n<br /><br />\nPresented by Wesley J. Chun\n<br /><br />\nThis tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BthJAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--internet-programming-with-python--pa1", 
            "speakers": [
                77
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                234, 
                268
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-InternetProgrammingWithPythonPart003373-329.jpg", 
            "title": "PyCon 2009: Internet Programming with Python (Part 3 of 3)", 
            "updated": "2009-04-16T09:13:51+00:00", 
            "video_mp4_length": "21970101", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-InternetProgrammingWithPythonPart003373.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 186
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nTrac, an open-source project management tool, has been gaining in popularity, however few people tap its true potential. To fully mold Trac to your team and project, you must venture into the realm of custom plugins. These short (or not so short) bits of code allow you to customize almost every aspect of Trac to your liking. Come learn how to get 110% out of your Trac system, or just see what Trac can do for you. Attendees should bring a laptop for the hands-on portion or the tutorial.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Btg3Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--hands-on-with-trac-plugins--part-2-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                269, 
                231, 
                232, 
                270
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-HandsOnWithTracPluginsPart002424-933.jpg", 
            "title": "PyCon 2009: Hands on with Trac plugins (Part 2 of 2)", 
            "updated": "2009-04-16T09:07:56+00:00", 
            "video_mp4_length": "234575078", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-HandsOnWithTracPluginsPart002424.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 187
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nTrac, an open-source project management tool, has been gaining in popularity, however few people tap its true potential. To fully mold Trac to your team and project, you must venture into the realm of custom plugins. These short (or not so short) bits of code allow you to customize almost every aspect of Trac to your liking. Come learn how to get 110% out of your Trac system, or just see what Trac can do for you. Attendees should bring a laptop for the hands-on portion or the tutorial.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtgbAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--hands-on-with-trac-plugins--part-1-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                269, 
                231, 
                232, 
                270
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-HandsOnWithTracPluginsPart001304-597.jpg", 
            "title": "PyCon 2009: Hands on with Trac plugins (Part 1 of 2)", 
            "updated": "2009-04-16T08:53:05+00:00", 
            "video_mp4_length": "1038929559", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-HandsOnWithTracPluginsPart001304.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 188
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nThere are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtZ7Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--data-storage-in-python---an-overview-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                271, 
                272, 
                273, 
                274, 
                275, 
                276, 
                277, 
                231, 
                232, 
                278, 
                279
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DataStorageInPythonAnOverviewOfOptionsPart002214-260.jpg", 
            "title": "PyCon 2009: Data Storage in Python - An Overview of Options (Part 2 of 3)", 
            "updated": "2009-04-16T07:42:31+00:00", 
            "video_mp4_length": "1044206941", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DataStorageInPythonAnOverviewOfOptionsPart002214.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 189
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nThere are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtV9Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--data-storage-in-python---an-overview0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                271, 
                272, 
                273, 
                274, 
                275, 
                276, 
                277, 
                231, 
                232, 
                278, 
                279
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DataStorageInPythonAnOverviewOfOptionsPart001373-556.jpg", 
            "title": "PyCon 2009: Data Storage in Python - An Overview of Options (Part 1 of 3)", 
            "updated": "2009-04-16T06:34:29+00:00", 
            "video_mp4_length": "1040288443", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DataStorageInPythonAnOverviewOfOptionsPart001373.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 190
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nThere are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtRsAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--data-storage-in-python---an-overview1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                271, 
                272, 
                273, 
                274, 
                275, 
                276, 
                277, 
                231, 
                232, 
                278, 
                279
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DataStorageInPythonAnOverviewOfOptionsPart003803-876.jpg", 
            "title": "PyCon 2009: Data Storage in Python - An Overview of Options (Part 3 of 3)", 
            "updated": "2009-04-16T05:27:13+00:00", 
            "video_mp4_length": "33029068", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DataStorageInPythonAnOverviewOfOptionsPart003803.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 191
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 101 (Part 1 of 2)\n<br /><br />\nThis 2 part tutorial presents the basics of Python to beginning and intermediate programmers. It pairs well with Python 102 which follows a similar outline but goes much deeper. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtRgAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "python-101--1-of-2", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python101Part001694-719.jpg", 
            "title": "Python 101 (1 of 2)", 
            "updated": "2009-04-16T05:20:48+00:00", 
            "video_mp4_length": "1039779806", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python101Part001694.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 192
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Plenary: Morning Lightning Talks \n<br /><br />\n[VIDEO HAS ISSUES: missing a bit at the beginning]\n<br /><br />\n(00:00) Building Appliances with Python - Moshe Zadka\n<br /><br />\n(05:40) Proposed Python License V3 and ...  VAN LINDBERG'D - Jesse Noller\n<br /><br />\n(08: 20) The Status is Not Quo - Mike Pirnat\n<br /><br />\n(12:55) Cork, building tiny apps - Alex Morega\n<br /><br />\n(19:10) NASA uses Python? - Katie Cunningham\n<br /><br />\n(23:35) SQLPython, command line interface to Oracle - Catherine Devlin (half done)\n<br /><br />\n(25:20) Gitosis - Tommi Virtanen\n<br /><br />\n(29:05) SQLPython, command line interface to Oracle (reprised) - Catherine Devlin\n<br /><br />\n(35:00) Player Piano - Peter Fein\n<br /><br />\n(40:10) Why DVCS - James Bennett\n<br /><br />\n(45:15) PyMite - Dean Hall\n<br /><br />\n(49:50) web2py - ?", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtN7Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--plenary--morning-lightning-talks--sat", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                280, 
                281, 
                282, 
                283, 
                284, 
                231, 
                232, 
                285, 
                286, 
                287
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PlenaryMorningLightningTalksSaturday678-923.jpg", 
            "title": "PyCon 2009: Plenary: Morning Lightning Talks (Saturday)", 
            "updated": "2009-04-16T04:18:23+00:00", 
            "video_mp4_length": "317366822", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PlenaryMorningLightningTalksSaturday678.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 193
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 101 (Part 2 of 2)\n<br /><br />\nThis half-day tutorial presents the basics of Python to beginning and intermediate programmers. It pairs well with Python 102 which follows a similar outline but goes much deeper. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtNiAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "python-101--2-of-2", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python101Part002503-307.jpg", 
            "title": "Python 101 (2 of 2)", 
            "updated": "2009-04-16T04:07:07+00:00", 
            "video_mp4_length": "1035984662", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python101Part002503.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 194
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 102 (Part 1 of 3)\n<br /><br />\nThis half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtJHAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-102--part-1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python102Part001692-621.jpg", 
            "title": "PyCon 2009: Python 102 (Part 1 of 3)", 
            "updated": "2009-04-16T02:42:03+00:00", 
            "video_mp4_length": "1039685697", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python102Part001692.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 195
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 102 Part 2 of 3)\n<br /><br />\nThis half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtE3Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-102--part-2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python102Part002967-183.jpg", 
            "title": "PyCon 2009: Python 102 (Part 2 of 3)", 
            "updated": "2009-04-16T01:34:30+00:00", 
            "video_mp4_length": "1044748856", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python102Part002967.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 196
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Python 102 (Part 3 of 3)\n<br /><br />\nThis half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BtAsAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-102--part-3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                258
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-Python102Part003896-321.jpg", 
            "title": "PyCon 2009: Python 102 (Part 3 of 3)", 
            "updated": "2009-04-16T00:26:29+00:00", 
            "video_mp4_length": "263731252", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-Python102Part003896.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 197
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bs9yAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-sqlalchemy--part-3-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToSQLAlchemyPart003481-712.jpg", 
            "title": "PyCon 2009: Introduction to SQLAlchemy (Part 3 of 3)", 
            "updated": "2009-04-16T00:04:29+00:00", 
            "video_mp4_length": "331707636", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToSQLAlchemyPart003481.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 198
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bs9EAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-sqlalchemy--part-1-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToSQLAlchemyPart001423-333.jpg", 
            "title": "PyCon 2009: Introduction to SQLAlchemy (Part 1 of 3)", 
            "updated": "2009-04-15T23:43:13+00:00", 
            "video_mp4_length": "1039721008", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToSQLAlchemyPart001423.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 199
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Bs4uAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--introduction-to-sqlalchemy--part-2-of", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                253, 
                234
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntroductionToSQLAlchemyPart002414-609.jpg", 
            "title": "PyCon 2009: Introduction to SQLAlchemy (Part 2 of 3)", 
            "updated": "2009-04-15T22:35:53+00:00", 
            "video_mp4_length": "1044853183", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntroductionToSQLAlchemyPart002414.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 200
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nAs a geek with Python kung fu, you have fun skills to share with others, including those still in high school and seeking to master mathematical concepts that will serve them for a life time. In taking this tutorial, you're opening a communications channel between yourself, and other eager learners hoping to partake more deeply of open source culture and the opportunities it offers. We know from last year that many PyCon delegates are broadly interested in education track. This proposal attempts to support this demand by developing some publicly-accessible Python-related material that demonstrates how object-oriented programming be learned by using them to implement concepts from the mathematical domain. Learning can take place at multiple levels: Python and object-oriented concepts. Mathematical concepts, which will be demonstrated in ways readily accessible to anyone who understands Python. Presentation of programming topics in the educational environment. From this latter point of view the pair teaching format can be considered experimental. Its success or otherwise will be determined largely by group dynamics, and our goal is to make the outcome in and of itself provide useful empirical data helpful to others planning workshops.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BssbAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-for-teachers--and-teachers-of-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                288
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PythonForTeachersAndTeachersOfTeachersPart001339-797.jpg", 
            "title": "PyCon 2009: Python for Teachers (and Teachers of Teachers) (Part 1 of 2)", 
            "updated": "2009-04-15T20:29:46+00:00", 
            "video_mp4_length": "1040201736", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PythonForTeachersAndTeachersOfTeachersPart001339.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 201
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nAs a geek with Python kung fu, you have fun skills to share with others, including those still in high school and seeking to master mathematical concepts that will serve them for a life time. In taking this tutorial, you're opening a communications channel between yourself, and other eager learners hoping to partake more deeply of open source culture and the opportunities it offers. We know from last year that many PyCon delegates are broadly interested in education track. This proposal attempts to support this demand by developing some publicly-accessible Python-related material that demonstrates how object-oriented programming be learned by using them to implement concepts from the mathematical domain. Learning can take place at multiple levels: Python and object-oriented concepts. Mathematical concepts, which will be demonstrated in ways readily accessible to anyone who understands Python. Presentation of programming topics in the educational environment. From this latter point of view the pair teaching format can be considered experimental. Its success or otherwise will be determined largely by group dynamics, and our goal is to make the outcome in and of itself provide useful empirical data helpful to others planning workshops.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BskKAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--python-for-teachers--and-teachers-of0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                288
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PythonForTeachersAndTeachersOfTeachersPart002402-418.jpg", 
            "title": "PyCon 2009: Python for Teachers (and Teachers of Teachers) (Part 2 of 2)", 
            "updated": "2009-04-15T19:22:15+00:00", 
            "video_mp4_length": "111925099", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PythonForTeachersAndTeachersOfTeachersPart002402.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 202
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<a href=\"http://blip.tv/file/1997952\"></a>\n<br />\n\nWhile the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BshfAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--using-twisted-deferreds--part-2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                289, 
                290, 
                231, 
                232, 
                234, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-UsingTwistedDeferredsPart002282-868.jpg", 
            "title": "PyCon 2009: Using Twisted Deferreds (Part 2 of 3)", 
            "updated": "2009-04-15T19:12:40+00:00", 
            "video_mp4_length": "1043770003", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-UsingTwistedDeferredsPart002282.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 203
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nWhile the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BsRGAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--using-twisted-deferreds--part-1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                289, 
                290, 
                231, 
                232, 
                234, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-UsingTwistedDeferredsPart001300-178.jpg", 
            "title": "PyCon 2009: Using Twisted Deferreds (Part 1 of 3)", 
            "updated": "2009-04-15T16:57:03+00:00", 
            "video_mp4_length": "1040669836", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-UsingTwistedDeferredsPart001300.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 204
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nWhile the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BsJKAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--using-twisted-deferreds--part-3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                289, 
                290, 
                231, 
                232, 
                234, 
                195
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-UsingTwistedDeferredsPart003600-823.jpg", 
            "title": "PyCon 2009: Using Twisted Deferreds (Part 3 of 3)", 
            "updated": "2009-04-15T15:49:14+00:00", 
            "video_mp4_length": "2566011", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-UsingTwistedDeferredsPart003600.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 205
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHave you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BsI8Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--intermediate-turbogears--part-3-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                230
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntermediateTurbogearsPart003567-791.jpg", 
            "title": "PyCon 2009: Intermediate Turbogears (Part 3 of 3)", 
            "updated": "2009-04-15T15:44:38+00:00", 
            "video_mp4_length": "356412781", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntermediateTurbogearsPart003567.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 206
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHave you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BsFWAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--intermediate-turbogears--part-2-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                230
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntermediateTurbogearsPart002106-521.jpg", 
            "title": "PyCon 2009: Intermediate Turbogears (Part 2 of 3)", 
            "updated": "2009-04-15T15:21:37+00:00", 
            "video_mp4_length": "1044355367", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntermediateTurbogearsPart002106.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 207
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "PyMite ligntning talk at PyCon09\n<br /><br />\nPresenter:  Dean Hall\n<br /><br />\nProject Site:  <a href=\"http://www.pythononachip.org/\">http://www.pythononachip.org</a>", 
            "embed": "<embed src=\"http://blip.tv/play/g%2BRy%2BsANAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--pymite-lighting-talk", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                285, 
                291
            ], 
            "thumbnail_url": "http://a.images.blip.tv/CarlFK-PyMiteAtPycon09517-578.jpg", 
            "title": "PyCon 2009: PyMite lighting talk", 
            "updated": "2009-04-15T14:36:37+00:00", 
            "video_mp4_length": "25097521", 
            "video_mp4_url": "http://blip.tv/file/get/CarlFK-PyMiteAtPycon09517.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 208
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nHave you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2Br8aAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--intermediate-turbogears--part-1-of-3", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                230
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-IntermediateTurbogearsPart001443-124.jpg", 
            "title": "PyCon 2009: Intermediate Turbogears (Part 1 of 3)", 
            "updated": "2009-04-15T14:12:26+00:00", 
            "video_mp4_length": "1039354383", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-IntermediateTurbogearsPart001443.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 209
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A Configuration Comparison in Python\n<br /><br />\nPresented at PyCon 2009 by Terry Peppers\n<br /><br />\nWhen faced with the simple task of figuring out how to use configuration to your advantage in Python there are a myriad of methods. The purpose of this talk is to walk through the standard library modules and the popular Python Package Index modules comparing and contrasting configuration formats and the code that consumes them. Specifically, I would like to walk through the use of the csv module, the ConfigParser module, ConfigObj, lxml, PyYaml and SimpleJSON.", 
            "embed": "<embed src=\"http://blip.tv/play/Afq8egI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-configuration-comparison-in-python-", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                292, 
                293, 
                294, 
                128, 
                231, 
                232, 
                295, 
                296
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AConfigurationComparisonInPython235-852.jpg", 
            "title": "PyCon 2009: A Configuration Comparison in Python (#70)", 
            "updated": "2009-04-15T13:00:00+00:00", 
            "video_mp4_length": "92189150", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AConfigurationComparisonInPython235.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 210
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with having to re-create the same content in multiple places in your web application it might be time to look at ToscaWidgets. ToscaWidgets gives the developer the ability to create reusable web content. This 3 hour lesson will cover installation, integration, and usage of ToscaWidgets. After we have a handle on how to create validated forms with ToscaWidgets, we will spend the second half of this lesson creating a working ajax widget, which we will test the client side component using ToscaWidget javascript technology.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrxjAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--toscawidgets--test-driven-modular-aja", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                21, 
                297
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ToscaWidgetsTestDrivenModularAjaxPart001985-9.jpg", 
            "title": "PyCon 2009: ToscaWidgets: Test Driven Modular Ajax (Part 1 of 2)", 
            "updated": "2009-04-15T12:54:16+00:00", 
            "video_mp4_length": "1038784757", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ToscaWidgetsTestDrivenModularAjaxPart001985.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 211
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with having to re-create the same content in multiple places in your web application it might be time to look at ToscaWidgets. ToscaWidgets gives the developer the ability to create reusable web content. This 3 hour lesson will cover installation, integration, and usage of ToscaWidgets. After we have a handle on how to create validated forms with ToscaWidgets, we will spend the second half of this lesson creating a working ajax widget, which we will test the client side component using ToscaWidget javascript technology.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrpiAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--toscawidgets--test-driven-modular-aj0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                21, 
                297
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ToscaWidgetsTestDrivenModularAjaxPart002764-754.jpg", 
            "title": "PyCon 2009: ToscaWidgets: Test Driven Modular Ajax (Part 2 of 2)", 
            "updated": "2009-04-15T11:46:42+00:00", 
            "video_mp4_length": "75066342", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ToscaWidgetsTestDrivenModularAjaxPart002764.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 212
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A Curious Course on Coroutines and Concurrency (part 1 of 3)\n<br /><br />\nPresented at PyCon 2009 by David Beazley\n<br /><br />\nIf you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.\n<br /><br />\n[VIDEO HAS ISSUES: bit of clipping start to finish.] ", 
            "embed": "<embed src=\"http://blip.tv/play/Afq6OAI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-curious-course-on-coroutines-and-co", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                255, 
                298, 
                299, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart001109-911.jpg", 
            "title": "PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 1 of 3)", 
            "updated": "2009-04-15T11:38:49+00:00", 
            "video_mp4_length": "1040643135", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart001109.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 213
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A Curious Course on Coroutines and Concurrency (part 3 of 3)\n<br /><br />\nPresented at PyCon 2009 by David Beazley \n<br /><br />\nIf you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.\n<br /><br />\n[VIDEO HAS ISSUES: bit of clipping start to finish.] ", 
            "embed": "<embed src=\"http://blip.tv/play/Afq4LwI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-curious-course-on-coroutines-and-c0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                255, 
                298, 
                299, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart003639-350.jpg", 
            "title": "PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 3 of 3)", 
            "updated": "2009-04-15T10:31:29+00:00", 
            "video_mp4_length": "193891513", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart003639.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 214
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A Curious Course on Coroutines and Concurrency (part 2 of 3)\n<br /><br />\nPresented at PyCon 2009 by David Beazley \n<br /><br />\nIf you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.\n<br /><br />\n[VIDEO HAS ISSUES: bit of clipping start to finish.]", 
            "embed": "<embed src=\"http://blip.tv/play/Afq3fQI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-curious-course-on-coroutines-and-c1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                255, 
                298, 
                299, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart002433-523.jpg", 
            "title": "PyCon 2009: A Curious Course on Coroutines and Concurrency (Part 2 of 3)", 
            "updated": "2009-04-15T10:19:04+00:00", 
            "video_mp4_length": "1043871584", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ACuriousCourseOnCoroutinesAndConcurrencyPart002433.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 215
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrYKAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--faster-python-programs-through-optimi", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                53, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-FasterPythonProgramsThroughOptimizationPart002899-905.jpg", 
            "title": "PyCon 2009: Faster Python Programs through Optimization (Part 2 of 3)", 
            "updated": "2009-04-15T09:06:36+00:00", 
            "video_mp4_length": "1044637114", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-FasterPythonProgramsThroughOptimizationPart002899.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 216
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrR_Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--faster-python-programs-through-optim0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                53, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-FasterPythonProgramsThroughOptimizationPart001361-789.jpg", 
            "title": "PyCon 2009: Faster Python Programs through Optimization (Part 1 of 3)", 
            "updated": "2009-04-15T07:59:05+00:00", 
            "video_mp4_length": "1039227431", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-FasterPythonProgramsThroughOptimizationPart001361.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 217
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrN6Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--faster-python-programs-through-optim1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                53, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-FasterPythonProgramsThroughOptimizationPart003785-715.jpg", 
            "title": "PyCon 2009: Faster Python Programs through Optimization (Part 3 of 3)", 
            "updated": "2009-04-15T06:52:01+00:00", 
            "video_mp4_length": "207948319", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-FasterPythonProgramsThroughOptimizationPart003785.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 218
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!\n<br /><br />\n[VIDEO HAS ISSUES: first 5 min muted ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrNaAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--application-developing-with-ironpytho", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                300, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DevelopingWithIronPythonPart002699-446.jpg", 
            "title": "PyCon 2009: Application Developing with IronPython (Part 2 of 3)", 
            "updated": "2009-04-15T06:34:06+00:00", 
            "video_mp4_length": "1044055125", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DevelopingWithIronPythonPart002699.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 219
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!\n<br /><br />\n[VIDEO HAS ISSUES: first 5 min muted ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrIxAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--application-developing-with-ironpyth0", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                300, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DevelopingWithIronPythonPart003708-475.jpg", 
            "title": "PyCon 2009: Application Developing with IronPython (Part 3 of 3)", 
            "updated": "2009-04-15T05:26:32+00:00", 
            "video_mp4_length": "439323248", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DevelopingWithIronPythonPart003708.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 220
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!\n<br /><br />\n[VIDEO HAS ISSUES: first 5 min muted ] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BrF_Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--application-developing-with-ironpyth1", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                300, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DevelopingWithIronPythonPart001216-319.jpg", 
            "title": "PyCon 2009: Application Developing with IronPython (Part 1 of 3)", 
            "updated": "2009-04-15T04:58:29+00:00", 
            "video_mp4_length": "1040499789", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DevelopingWithIronPythonPart001216.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 221
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Plenary: Sprint Prep\n<br /><br />\nTalks about what sprints were happening, what was getting worked on, and who to talk to.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIs%2BAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--plenary--sprint-intro", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PlenarySprintIntro722-151.jpg", 
            "title": "PyCon 2009: Plenary: Sprint Intro", 
            "updated": "2009-04-04T23:50:07+00:00", 
            "video_mp4_length": "91697008", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PlenarySprintIntro722.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 222
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Plenary: Afternoon Lightning Talks\n<br /><br />\n(00:05) Easy command line parsing with argparse - Steven Bethard\n<br /><br />\n(04:14) Moments - Charles Brandt\n<br /><br />\n(11:45) Crowdsourcing lightning - \n<br /><br />\n(13:40) Python 3.1 changes - Benjamin Peterson\n<br /><br />\n(19:35) The Poor Man's Continuous Integration - Zain\n<br /><br />\n(25:55) cluemapper - Nate Aune\n<br /><br />\n(29:55) ReleaseBot - Brian Warner\n<br /><br />\n(34:50) worldPloneday - Jordan Baker and Roberto\n<br /><br />\n(40:15) blist - Daniel Stutzbach\n<br /><br />\n(45:10) Python Open Source Overview on Launchpad - Gary Poster\n<br /><br />\n(49:50) Pyjamas - Bernd Dorn\n<br /><br />\n(53:50) \\ is Evil and IP Addresses in Python - Gregory Smith\n<br /><br />\n(56:00) ctypes - Jason Coombs\n<br /><br />\n(61:10) Come to EuroPython - Jonathan Hartley\n<br /><br />\n(65:45) Zope - Lennart Regebro\n<br /><br />\n(71:05) Site Checker - Eric Holscher\n<br /><br />\n(76:20) PSF Community Awards", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIsxAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--plenary--afternoon-lightning-talks", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                301, 
                302, 
                303, 
                220, 
                0, 
                194, 
                304, 
                216, 
                231, 
                232, 
                305, 
                306, 
                307, 
                21, 
                263, 
                217
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PlenaryAfternoonLightningTalks527-348.jpg", 
            "title": "PyCon 2009: Plenary: Afternoon Lightning Talks", 
            "updated": "2009-04-04T23:44:02+00:00", 
            "video_mp4_length": "496274439", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PlenaryAfternoonLightningTalks527.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 223
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nThis talk will describe how zc.buildout is used in our company every day to develop, package and distribute Pylons, Django or Plone applications. It will focus on the best practices we have built around the tool and the tools we have built on the top of it to speed up our work.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIpAAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--how-alterway-releases-web-application", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                250
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-HowAlterWayReleasesWebApplicationsUsingZcbuildout747-905.jpg", 
            "title": "PyCon 2009: How AlterWay releases web applications using zc.buildout (#22)", 
            "updated": "2009-04-04T22:49:33+00:00", 
            "video_mp4_length": "110995087", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-HowAlterWayReleasesWebApplicationsUsingZcbuildout747.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 224
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Designing a web framework: Django's design decisions\n<br /><br />\nPresented by Jacob Kaplan-Moss\n<br /><br />\nDjango is a high-level web development framework designed for rapid development of database-backed web sites. Since its release three years ago Django's grown by leaps and bounds; it's now part of a highly successful new generation of web development tools.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIotAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--designing-a-web-framework--django--39", 
            "speakers": [
                78
            ], 
            "summary": "", 
            "tags": [
                0, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-DesigningAWebFrameworkDjangosDesignDecisions895-36.jpg", 
            "title": "PyCon 2009: Designing a web framework: Django&#39;s design decisions (#75)", 
            "updated": "2009-04-04T22:42:39+00:00", 
            "video_mp4_length": "172288254", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-DesigningAWebFrameworkDjangosDesignDecisions895.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 225
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "A better Python for the JVM\n<br /><br />\nPresented at PyCon 2009 by Tobias Ivarsson\n<br /><br />\nAt the last PyCon we announced that we were starting a project for improving the Jython compiler. This year we will share the first fruits of that work with the Python community!\n<br /><br />\n[VIDEO HAS ISSUES: ambient mic left on; results in echoing audio]", 
            "embed": "<embed src=\"http://blip.tv/play/AfiKGwI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-better-python-for-the-jvm", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                308, 
                9, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-ABetterPythonForTheJVM438-121.jpg", 
            "title": "PyCon 2009: A better Python for the JVM", 
            "updated": "2009-04-04T22:31:33+00:00", 
            "video_mp4_length": "166143488", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-ABetterPythonForTheJVM438.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 226
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Plenary: Morning Lightning Talks\n<br /><br />\n[VIDEO HAS ISSUES: ] TBA\n<br /><br />\n(00:20) GeoDjango - Justin Bronn\n<br /><br />\n(05:50) What's up with Zope - Martijn Faassen\n<br /><br />\n(10:55) Scripting Launchpad - Paul Hummer\n<br /><br />\n(13:50) JSQT - ?\n<br /><br />\n(16:10) Python, AppEngine, and Informatics - Charles Severance\n<br /><br />\n(20:55) an online game called stackoverflow - John Mulder\n<br /><br />\n(25:25) Miro - Chris Webber (plus he alludes to Miro Community which is this site!)\n<br /><br />\n(28:40) Deploying applications with zc.buildout and RPM - Jim Fulton\n<br /><br />\n(34:10) Ham radio and Python - Adam Fast\n<br /><br />\n(38:30) Plone + Pylons = Plyne - Roberto Allende\n<br /><br />\n(41:35) GozerBot - John Hampton\n<br /><br />\n(44:25) Software Engineering and the Pickling Tools - Rich Saunders\n<br /><br />\n(48:45) Talks about the stop watch", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIk%2BAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--plenary--morning-lightning-talks", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                309, 
                310, 
                0, 
                24, 
                311, 
                312, 
                194, 
                313, 
                314, 
                216, 
                315, 
                231, 
                232, 
                229, 
                316, 
                250, 
                217
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PlenaryMorningLightningTalks730-226.jpg", 
            "title": "PyCon 2009: Plenary: Morning Lightning Talks", 
            "updated": "2009-04-04T21:42:26+00:00", 
            "video_mp4_length": "242768891", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PlenaryMorningLightningTalks730.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 227
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: Audio clipping, ambient mic up (echoing audio)] Paver makes managing common aspects of Python projects easier, by providing just the right kind of scaffolding on which to automate building and packaging of your software. In this talk, you'll see how easy it is to get started with Paver, how you can use Paver without alienating other users of your code, and how you can use Paver to trivially extend Python's distutils commands.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIkgAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--paver--easy-build-and-deployment-auto", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                317, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PaverEasyBuildAndDeploymentAutomationForPythonProjects145-314.jpg", 
            "title": "PyCon 2009: Paver: easy build and deployment automation for Python projects (#13)", 
            "updated": "2009-04-04T21:26:47+00:00", 
            "video_mp4_length": "96090618", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PaverEasyBuildAndDeploymentAutomationForPythonProjects145.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 228
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\nMany advocates of unit testing believe that testing desktop (GUI) applications is so difficult as to not be worth it. Not only is it possible, but 'functional testing' (testing an application from the point of view of the user) is an important part of an agile development process.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIkVAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--functional-testing-of-desktop-applica", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                318, 
                231, 
                232, 
                21
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-FunctionalTestingOfDesktopApplications136-206.jpg", 
            "title": "PyCon 2009: Functional Testing of Desktop Applications (#1)", 
            "updated": "2009-04-04T21:20:47+00:00", 
            "video_mp4_length": "228468258", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-FunctionalTestingOfDesktopApplications136.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 229
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "<br />\n\n[VIDEO HAS ISSUES: Ambient mic used, some echoing] Everyone's heard of C extensions to Python, but few have ventured into those murky depths. This is a quick overview of how to write a C extension, complete with highlights of the C API, memory management, error handling, and type creation. Whether you want to speed up your Python, integrate with legacy code, contribute to Python's core, or just learn a little about how it all works under the covers, you will enjoy this trip through unfamiliar territory. I guarantee you will return safely.", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIhwAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--a-whirlwind-excursion-through-writing", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                185, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AWhirlwindExcursionThroughWritingACExtension305-36.jpg", 
            "title": "PyCon 2009: A Whirlwind Excursion through Writing a C Extension (#68)", 
            "updated": "2009-04-04T21:05:42+00:00", 
            "video_mp4_length": "168747462", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AWhirlwindExcursionThroughWritingACExtension305.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 230
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "PyCon 2009: Behind the scenes of EveryBlock.com by Adrian Holovaty\n<p>\nAdrian Holovaty, bad-boy YouTube guitar star (search for him, if you dare!) and co-author of the Django web framework, takes you under the hood of EveryBlock.com, a Knight Foundation News Challenge startup which rounds up local news and information, and is powered 100% by Python and Django.\n</p><p>\n[VIDEO HAS ISSUES: Audio humming]</p>", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIg4Ag\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--behind-the-scenes-of-everyblock-com--", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                0, 
                319, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-BehindTheScenesOfEveryBlockcom359-71.jpg", 
            "title": "PyCon 2009: Behind the scenes of EveryBlock.com (#111)", 
            "updated": "2009-04-04T20:42:08+00:00", 
            "video_mp4_length": "204743972", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-BehindTheScenesOfEveryBlockcom359.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 231
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "PyPy Status Talk\n<br /><br />\nPresented by Holger Krekel and Maciej Fijalkowski\n<br /><br />\nPyPy has come a long way. It's gone from being purely a research project to providing a flexible and reasonably fast Python Interpreter, itself implemented in Python. Although PyPy is not yet a viable CPython replacement, PyPy is able to run sophisticated python applications like Django and Twisted. In this talk, we'll focus on improvements that happened during the last year in PyPy. This talk will also explain the motivations driving current PyPy development and its targets for the future.\n<br /><br />\n[VIDEO HAS ISSUES: Audio humming, other misc audio issues] ", 
            "embed": "<embed src=\"http://blip.tv/play/g4Vi%2BIdoAg\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--pypy-status-talk---72", 
            "speakers": [
                79
            ], 
            "summary": "", 
            "tags": [
                231, 
                232, 
                91
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-PyPyStatusTalk814-335.jpg", 
            "title": "PyCon 2009: PyPy status talk (#72)", 
            "updated": "2009-04-04T20:09:13+00:00", 
            "video_mp4_length": "127771496", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-PyPyStatusTalk814.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 232
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "About Python Namespaces (and Code Objects)\n<br /><br />\nPresented at PyCon 2009\n<br /><br />\nAn explanation of some of the underlying concepts of Python, come learn about names and values placed in namespaces, modified by code objects and collected into modules. We'll explore namespaces using the Python interactive prompt, with graphical display of object trees using Graphviz. Also explained will be the namespace concepts of closures and early binding; how to define new objects without subclassing via use of default/curried arguments and closures.\n<br /><br />\n[VIDEO HAS ISSUES: Audio buzzing, missing beginning, talk is only 15 mins (may be cut)] ", 
            "embed": "<embed src=\"http://blip.tv/play/AfiHUAI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--about-python-namespaces--and-code-obj", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                320, 
                321, 
                231, 
                232, 
                254
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-AboutPythonNamespacesAndCodeObjects397-138.jpg", 
            "title": "PyCon 2009: About Python Namespaces (and Code Objects) (#46)", 
            "updated": "2009-04-04T20:00:58+00:00", 
            "video_mp4_length": "48424307", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-AboutPythonNamespacesAndCodeObjects397.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 233
    }, 
    {
        "fields": {
            "added": "2012-02-22 22:20", 
            "description": "Keynote: Reddit: Steve Huffman and Alexis Ohanian\n<br /><br />\nThe co-founders of reddit.com spoke about Reddit's origin, the switch to Python, and took many questions.", 
            "embed": "<embed src=\"http://blip.tv/play/AffYcAI\" type=\"application/x-shockwave-flash\" width=\"480\" height=\"350\" allowscriptaccess=\"always\" allowfullscreen=\"true\"></embed>", 
            "category": 5, 
            "slug": "pycon-2009--keynote--reddit--steve-huffman-and-al", 
            "speakers": [], 
            "summary": "", 
            "tags": [
                139, 
                231, 
                232
            ], 
            "thumbnail_url": "http://a.images.blip.tv/Pycon-KeynoteRedditSteveHuffmanAndAlexisOhanian687-56.jpg", 
            "title": "PyCon 2009: Keynote: Reddit: Steve Huffman and Alexis Ohanian", 
            "updated": "2009-04-03T02:46:45+00:00", 
            "video_mp4_length": "177947329", 
            "video_mp4_url": "http://blip.tv/file/get/Pycon-KeynoteRedditSteveHuffmanAndAlexisOhanian687.mp4"
        }, 
        "model": "videos.Video", 
        "pk": 234
    }
]
