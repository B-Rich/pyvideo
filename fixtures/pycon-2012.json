[
  {
    "pk": 666,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        224
      ],
      "title": "Building a Kinect game with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:15:10Z",
      "added": "2012-03-12T05:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=BoMQqW0lxVE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "building-a-kinect-game-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk will show you how to develop a game using Kinect from Python.  I'll start w/ an introduction to the Kinect API including skeleton tracking, normal video, depth video, and audio APIs including speech recognition.  I\u2019ll then show how the Kinect APIs can be incorporated into a game using PyGame.  After the talk you\u2019ll be able to start developing your own Python based Kinect games!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/BoMQqW0lxVE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/BoMQqW0lxVE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/BoMQqW0lxVE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 689,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        186
      ],
      "title": "Building a Robot that Can Play Angry Birds on a Smartphone, (or Robots are the Future of Testing)",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:45:11Z",
      "added": "2012-03-12T07:45:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NkUTLRZBWLM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "building-a-robot-that-can-play-angry-birds-on-a-s",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Can your robot play Angry Birds? On an iPhone? Mine can. I call it \"BitbeamBot\". It started as an art project, but it has a much more serious practical application: mobile web testing. To trust that your mobile app truly works, you need an end-to-end test on the actual device. BitbeamBot is an Arduino-powered open-source hardware CNC robot that can test any application on any mobile device. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/NkUTLRZBWLM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NkUTLRZBWLM&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NkUTLRZBWLM&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 674,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        36,
        37
      ],
      "title": "Cache Rules Everything Around Me",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:45:12Z",
      "added": "2012-03-12T05:45:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=fekA2mRGTTE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "cache-rules-everything-around-me",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk aims to briefly introduce the core concepts of caching and covers the best practices of implementing them, using a small variety of python web frameworks (Flask, Django) for example code.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/fekA2mRGTTE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/fekA2mRGTTE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/fekA2mRGTTE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 665,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        361
      ],
      "title": "Coroutines, event loops, and the history of Python generators",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:15:10Z",
      "added": "2012-03-12T05:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=b7R3-_ViNxk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "coroutines-event-loops-and-the-history-of-pytho",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk traces lightweight concurrency from Python 2.2's generators, which enabled semi-coroutines as a mechanism for scheduling \"weightless\" threads; to PEP 342, which created true coroutines, and hence made event-driven programming easier; to 3rd party libraries built around coroutines, from older GTasklet and peak.events to the current Greenlet/gevent and Twisted Reactor.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/b7R3-_ViNxk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/b7R3-_ViNxk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/b7R3-_ViNxk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 678,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        369
      ],
      "title": "Cross-Compiling Python & C Extensions for Embedded Systems",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:30:11Z",
      "added": "2012-03-12T06:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=nhr-YErfW8k",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "cross-compiling-python-c-extensions-for-embedde",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Cross-compiling is not a use case directly supported by the Python build and extension system. This talk will discuss the process of building python for your embedded platform, and the basics of getting C extensions compiled and running. It will focus on Linux so that the build host and the build target are the same.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/nhr-YErfW8k/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/nhr-YErfW8k&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/nhr-YErfW8k&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 684,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        373
      ],
      "title": "Designing Embedded Systems with Linux and Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:15:12Z",
      "added": "2012-03-12T07:15:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=WZoeqnsY9AY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "designing-embedded-systems-with-linux-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The continual decrease in the cost of computer hardware is allowing more embedded systems to be built with Linux and Python, instead of the traditional approach of a real-time operating system and C. This talk reviews the differences between those approaches and describes problems, solutions, and tools that can be used when building embedded systems with Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/WZoeqnsY9AY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/WZoeqnsY9AY&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/WZoeqnsY9AY&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 661,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        336
      ],
      "title": "Flexing SQLAlchemy's Relational Power",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:00:09Z",
      "added": "2012-03-12T05:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=399c-ycBvo4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "flexing-sqlalchemys-relational-power",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>How do you take the big step from casual SQLAlchemy user, who treats your database as a mysterious object store, to advanced power user, who optimizes critical queries, plans indexing and migrations, and generates efficient reports? This talk will teach you how databases think; why humanity invented the Relational Algebra; and how SQLAlchemy grants you access to relational power.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/399c-ycBvo4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/399c-ycBvo4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/399c-ycBvo4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 668,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        362
      ],
      "title": "Getting the Most Out of Python Imports",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:30:11Z",
      "added": "2012-03-12T05:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=kdZuUIj4lMo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "getting-the-most-out-of-python-imports",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>To really take advantage of Python you must understand how imports work and how to use them effectively.  In this talk we'll discuss both of these.  After a short introduction to imports, we'll dive right in and look at how customizing import behavior can make all your wildest dreams come true.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/kdZuUIj4lMo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/kdZuUIj4lMo&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/kdZuUIj4lMo&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 662,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        89
      ],
      "title": "Hand Coded Applications with SQLAlchemy",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:00:09Z",
      "added": "2012-03-12T05:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=E09qigk_hnY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "hand-coded-applications-with-sqlalchemy",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>SQLAlchemy is the object relational mapper and database toolkit for Python, first introduced in 2005. In this talk I'll describe why SQLAlchemy has always been called a \"toolkit\", detailing the software construction mindset for which SQLAlchemy was designed to be used with - what I am currently referring to as the \"Hand Coded\" approach. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/E09qigk_hnY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/E09qigk_hnY&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/E09qigk_hnY&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 686,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        375
      ],
      "title": "How CherryPy supports Python 2 and 3",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:15:12Z",
      "added": "2012-03-12T07:15:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=nvkCqFLtcJI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-cherrypy-supports-python-2-and-3",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>CherryPy was the first web framework to be made available for use with Python 3, and we tried several approaches to support both Python 2 and 3 before settling on one. Learn about the ups and the downs of each approach, and ways you can make your own porting project easier.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/nvkCqFLtcJI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/nvkCqFLtcJI&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/nvkCqFLtcJI&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 659,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        358
      ],
      "title": "How the PyPy JIT works",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:45:10Z",
      "added": "2012-03-12T04:45:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NIcijUt-HlE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-the-pypy-jit-works",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Python community is abuzz about the major speed gains PyPy can offer pure Python code. But how does PyPy JIT actually work? This talk will discuss how the PyPy JIT is implemented. It will include descriptions of the tracing, optimization, and assembly generation phases. I will demonstrate each step with a example loop.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/NIcijUt-HlE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NIcijUt-HlE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NIcijUt-HlE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 656,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Keynote: David Beazley",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:30:09Z",
      "added": "2012-03-12T04:30:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=l_HBRhcgeuQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-david-beazley",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/l_HBRhcgeuQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/l_HBRhcgeuQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/l_HBRhcgeuQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 685,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        374
      ],
      "title": "Mailman 3",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:15:12Z",
      "added": "2012-03-12T07:15:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=dX3DRdFKW_E",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "mailman-3",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Mailman 3 has been in development for several years.  This is an evolution of the ever popular mailing list management system that runs thousands of mailing lists around the world.  This talk describes how the code has been modernized and how the architectural deficiencies of Mailman 2 have been addressed using REST and other technologies.  This is a spinoff from the AOSA chapter on Mailman 3.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/dX3DRdFKW_E/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/dX3DRdFKW_E&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/dX3DRdFKW_E&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 664,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        199
      ],
      "title": "Making Jython Faster and Better",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:15:10Z",
      "added": "2012-03-12T05:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=y_cXzaymXm0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-jython-faster-and-better",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>As a dynamic language, Python is difficult to optimize. In addition, these dynamic features make using Python code from Java currently too complex. However, Java 7 adds the invokedynamic bytecode and corresponding library support, making it possible to finally address these problems in Jython. This talk will describe work in progress to make Jython faster and better (improving Java integration).</p>",
      "thumbnail_url": "http://img.youtube.com/vi/y_cXzaymXm0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/y_cXzaymXm0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/y_cXzaymXm0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 676,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        38
      ],
      "title": "Making maps with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:15:10Z",
      "added": "2012-03-12T06:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=RBOScqRGHZA",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-maps-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python makes it easy to store, query, and transform geodata. We will run through a handful of useful GIS libraries and patterns that let you do magical things with your maps. If you want to make maps that are more interactive and more interesting, this talk is for you.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/RBOScqRGHZA/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/RBOScqRGHZA&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/RBOScqRGHZA&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 669,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        211
      ],
      "title": "Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:30:11Z",
      "added": "2012-03-12T05:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=QPgqfnKG_T4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "militarizing-your-backyard-with-python-computer",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Has your garden been ravaged by the marauding squirrel hordes? Has your bird feeder been pillaged? Tired of shaking your fist at the neighbor children? Learn how to use Python to tap into computer vision libraries and build an automated sentry water cannon capable of soaking intruders.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QPgqfnKG_T4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QPgqfnKG_T4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QPgqfnKG_T4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 677,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        368
      ],
      "title": "Polyglot Programming with Python: Python/Scala Interop",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:15:10Z",
      "added": "2012-03-12T06:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=fWONoZvTi80",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "polyglot-programming-with-python-pythonscala-in",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>I won't just demonstrate how to use projects that bridge programming languages, I'll walk through the lower-level code that allows inter-language communication to happen.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/fWONoZvTi80/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/fWONoZvTi80&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/fWONoZvTi80&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 663,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        360
      ],
      "title": "Project Gado: Building an Open Archival Scanning Robot Using Python and Arduino",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:00:09Z",
      "added": "2012-03-12T05:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=1CjX385y3e4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "project-gado-building-an-open-archival-scanning",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Project Gado is an initiative which aims to create an open-source archival scanning robot which small archives can purchase for $500 and use to autonomously scan their photographic collections. This talk presents the Gado 2, a prototype scanning robot built around Python and Arduino, and shares lessons learned from using Python as the primary language in a large-scale archival scanning project. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/1CjX385y3e4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/1CjX385y3e4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/1CjX385y3e4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 667,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        331
      ],
      "title": "Python and HDF5 - Fast Storage for Large Data",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:15:10Z",
      "added": "2012-03-12T05:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hnhN2_TpY8g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-and-hdf5-fast-storage-for-large-data",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The presentation introduces the possibilities to\r\nuse HDF5 (Hierarchical Data Format) from Python.\r\nHDF5 is one of the fastest ways to store large\r\namounts of numerical data.\r\nThe talk is for scientist who would like\r\nto store their measured or calculated data as well\r\nas for programmers who are interested in non-relational\r\ndata storage. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/hnhN2_TpY8g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hnhN2_TpY8g&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hnhN2_TpY8g&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 671,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        365,
        364
      ],
      "title": "Python for data lovers: explore it, analyze it, map it",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:30:11Z",
      "added": "2012-03-12T05:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=GxyfYEe8MiQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-for-data-lovers-explore-it-analyze-it-m",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Exploring and analyzing data can be daunting and time-consuming, even for data lovers. Python can make the process fun and exciting. We will present techniques of data analysis, along with python tools that help you explore and map data. Our talk includes examples that show how python libraries such as csvkit, matplotlib, scipy, networkx and pysal can help you dig into and make sense of your data.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/GxyfYEe8MiQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/GxyfYEe8MiQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/GxyfYEe8MiQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 660,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        359
      ],
      "title": "Python for makers",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:45:10Z",
      "added": "2012-03-12T04:45:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=wslWYg0CTkY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-for-makers",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Digital fabrication is the art of translating digital designs into physical objects. Using personal machines that are controlled via software, a live demonstration of CNC milling and 3D printing will also be performed. This talk is a walkthrough from 3D models to machine motion, that shows how we can use Python to write GCODE generators that create endless form.  </p>",
      "thumbnail_url": "http://img.youtube.com/vi/wslWYg0CTkY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/wslWYg0CTkY&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/wslWYg0CTkY&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 657,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        357
      ],
      "title": "Python Meets the Arduino",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:45:09Z",
      "added": "2012-03-12T04:45:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=54XwSUC8klI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-meets-the-arduino",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. Python is our favorate programming language that allows you to integrate systems more effectively. Learn how to use Python to communicate with an Arduino and interact with sensors, solenoids and motors.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/54XwSUC8klI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/54XwSUC8klI&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/54XwSUC8klI&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 655,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Python Software Foundation Chairman's Address",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:30:09Z",
      "added": "2012-03-12T04:30:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=X6807rcObkk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-software-foundation-chairmans-address",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/X6807rcObkk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/X6807rcObkk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/X6807rcObkk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 682,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        371
      ],
      "title": "RESTful APIs With Tastypie",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:00:11Z",
      "added": "2012-03-12T07:00:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Zv26xHYlc8s",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "restful-apis-with-tastypie",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Providing full-featured REST APIs is an increasingly popular request. Tastypie allows you to easily implement a customizable REST API for your Python or Django applications.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Zv26xHYlc8s/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Zv26xHYlc8s&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Zv26xHYlc8s&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 690,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Saturday Evening Lightning talks (60 minutes)",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:45:12Z",
      "added": "2012-03-12T07:45:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=eLuscpu4xA0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "saturday-evening-lightning-talks-60-minutes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/eLuscpu4xA0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/eLuscpu4xA0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/eLuscpu4xA0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 654,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Saturday Morning Lightning talks",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:30:09Z",
      "added": "2012-03-12T04:30:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=H841U6RhrDU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "saturday-morning-lightning-talks",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/H841U6RhrDU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/H841U6RhrDU?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/H841U6RhrDU?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 673,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        200
      ],
      "title": "Sharing is Caring: Posting to the Python Package Index",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:45:12Z",
      "added": "2012-03-12T05:45:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bwwf_HbEJQM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sharing-is-caring-posting-to-the-python-package",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Due to its robust namespacing, Python uniquely equips developers to write and distribute reusable code. The Python community has a tool for this: the Python Package Index. PyPI is a massive repository of code, and in this talk you'll learn how to take code that you've written it and register and distribute it for use by others.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bwwf_HbEJQM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bwwf_HbEJQM&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bwwf_HbEJQM&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 675,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        367
      ],
      "title": "Spatial data and web mapping with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:00:11Z",
      "added": "2012-03-12T06:00:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qmgh14LUOjQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "spatial-data-and-web-mapping-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Spatial data are often seen as opaque to most developers, and while dealing with them does require a shift in approach from the data types we most regularly handle, they needn\u2019t be the domain of specialists. High-quality Python libraries and Python-based applications exist for operating on and transforming spatial data, and for creating visualizations, including maps for presentation on the web.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qmgh14LUOjQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qmgh14LUOjQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qmgh14LUOjQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 670,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        363
      ],
      "title": "Storm: the Hadoop of Realtime Stream Processing",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:30:11Z",
      "added": "2012-03-12T05:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Ycvg0PCQ-sM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "storm-the-hadoop-of-realtime-stream-processing",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Twitter's new scalable, fault-tolerant, and simple(ish) stream programming system... with Python!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Ycvg0PCQ-sM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Ycvg0PCQ-sM&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Ycvg0PCQ-sM&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 679,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        370
      ],
      "title": "The Email Package: Past, Present, and Future",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:30:11Z",
      "added": "2012-03-12T06:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=C9K8DOe1zWw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-email-package-past-present-and-future",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The email package in the Python Standard library has had a somewhat rocky transition into the Python3 era, and still doesn't handle non-ASCII easily.  That is about to change. This talk will compare how things worked in Python2 (the past), how things work now (in Python3.2), and how things will work much better in the future (hopefully Python3.3).\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/C9K8DOe1zWw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/C9K8DOe1zWw&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/C9K8DOe1zWw&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 683,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        372
      ],
      "title": "The Pyed Piper: A Modern Python Alternative to awk, sed and Other Unix Text Manipulation Utilities ",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T07:15:12Z",
      "added": "2012-03-12T07:15:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3UHE-zD1r_M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-pyed-piper-a-modern-python-alternative-to-aw",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>\"The Pyed Piper\", or pyp, is a linux command line text manipulation tool similar to awk or sed, but which uses standard python string and list methods as well as custom functions evolved to generate fast results in an intense production environment.\r\n\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/3UHE-zD1r_M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3UHE-zD1r_M&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3UHE-zD1r_M&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 672,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        366
      ],
      "title": "Using fabric to standardize the development process",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T05:45:11Z",
      "added": "2012-03-12T05:45:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bTXert2uRco",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "using-fabric-to-standardize-the-development-proce",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>By ensuring consistency and repeatability in setting up the development environments of a team of developers, errors can be avoided (by automating repetitive tasks). It also helps by lowering the entry barrier for new developers, and letting existing developers focus on development tasks without having to worry about infrastructure or process issues.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bTXert2uRco/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bTXert2uRco&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bTXert2uRco&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 680,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        144
      ],
      "title": "What Python can learn from Java",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T06:30:12Z",
      "added": "2012-03-12T06:30:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=z1RQMm37Xmw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "what-python-can-learn-from-java",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Java is in some ways a bogeyman to the Python community -- the language that parents scare their children with, the Cobol of the 21st century.  But if we look past the cesspool of JEE it turns out that Java has quietly become an excellent systems environment, one that is still in many ways ahead of its time.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/z1RQMm37Xmw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/z1RQMm37Xmw&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/z1RQMm37Xmw&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 658,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        28,
        333,
        104
      ],
      "title": "Why PyPy by example",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T04:45:10Z",
      "added": "2012-03-12T04:45:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=P5ad6NpjR3M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "why-pypy-by-example",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>One of the goals of PyPy is to make existing Python code faster, however an\r\neven broader goal was to make it possible to write things in Python that\r\nprevious would needed to be written in C or other low-level language.\r\nThis talk will show examples of this, and describe how they represent\r\nthe tremendous progress PyPy has made, and what it means for people looking\r\nto use PyPy.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/P5ad6NpjR3M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/P5ad6NpjR3M&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/P5ad6NpjR3M&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 629,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        335
      ],
      "title": "A Noob Speaks to Noobs: Your First Site in the Cloud",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:30:05Z",
      "added": "2012-03-11T09:30:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hyzPYaAmVOc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "a-noob-speaks-to-noobs-your-first-site-in-the-cl",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A developer talks about her lessons learned with setting up her first server, and offers advice to others about to tread that path.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hyzPYaAmVOc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hyzPYaAmVOc&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hyzPYaAmVOc&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 649,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        227
      ],
      "title": "A resume-based WSGI Load Balancer",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T02:00:08Z",
      "added": "2012-03-12T02:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tYW52SLy_w0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "a-resume-based-wsgi-load-balancer",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>When a web application is large, it's a good idea to send different kinds of requests to different servers to reduce the content corpus managed by each server.  A decentralized load balancing-based approach is presented in which each application server keeps track of what it's good at and presents its resume to load balancers, which use application server resumes to distribute load.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tYW52SLy_w0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tYW52SLy_w0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tYW52SLy_w0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 634,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        40
      ],
      "title": "Advanced Security Topics",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:45:06Z",
      "added": "2012-03-11T09:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=JOXwclgvXB0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "advanced-security-topics",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>If your Python application has users, you should be worried about security. This talk will cover advanced material, highlighting common mistakes. Topics will include hashing and salts, timing attacks, serialization, and much more. Expect eye opening demos, and an urge to go fix your code right away.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/JOXwclgvXB0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/JOXwclgvXB0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/JOXwclgvXB0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 638,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        351
      ],
      "title": "Apache Cassandra and Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T10:15:07Z",
      "added": "2012-03-11T10:15:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=188mXjwdkak",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "apache-cassandra-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Using Apache Cassandra from Python is easy to do.  This talk will cover setting up and using a local development instance of Cassandra from Python.  It will cover using the low level thrift interface, as well as using the higher level pycassa library.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/188mXjwdkak/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/188mXjwdkak&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/188mXjwdkak&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 635,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        348
      ],
      "title": "Build reliable, traceable, distributed systems with ZeroMQ",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T10:00:06Z",
      "added": "2012-03-11T10:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9G6-GksU7Ko",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "build-reliable-traceable-distributed-systems-wi",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>We will show how to build simple yet powerful RPC code with ZeroMQ, with very few (if any!) modification to existing code. We will build fan-in and fan-out topologies with ZeroMQ special socket types to implement PUB/SUB patterns and scale up job-processing tasks. Thanks to introspection, the resulting services will be self-documented. Finally, we will show how to implement distributed tracing.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9G6-GksU7Ko/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9G6-GksU7Ko&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9G6-GksU7Ko&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 648,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        216
      ],
      "title": "Certainty in an Uncertain World: Gaining Confidence through Security Testing",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T02:00:08Z",
      "added": "2012-03-12T02:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=TmuEDxX1FDQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "certainty-in-an-uncertain-world-gaining-confiden",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Nobody thinks you have to be a performance expert to write performance tests- why assume that you have to be a security expert to write security tests? During this presentation I'll show you how to use fuzzers, attack tools, and other simple techniques to help protect your users, improve the strength of your existing tests, and gain confidence in the security of your code. There will be demos!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/TmuEDxX1FDQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/TmuEDxX1FDQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/TmuEDxX1FDQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 688,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        238
      ],
      "title": "Code Generation in Python: Dismantling Jinja",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T07:45:06Z",
      "added": "2012-03-12T07:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=jXlR0Icvvh8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "code-generation-in-python-dismantling-jinja",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>For many DSLs such as templating languages it's important to use code generation to achieve acceptable performance in Python.  The current version of Jinja went through many different iterations to end up where it is currently.  This talk walks through the design of Jinja2's compiler infrastructure and why it works the way it works and how one can use newer Python features for better results.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/jXlR0Icvvh8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/jXlR0Icvvh8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/jXlR0Icvvh8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 626,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        45
      ],
      "title": "Data, Design, Meaning",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T04:15:06Z",
      "added": "2012-03-11T04:15:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=vfYul2E56fo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "data-design-meaning",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The ultimate goal of data visualization is to tell a story and supply meaning. There are tools and science that can inform your choice of data to present and how best to present it. We reflexively evaluate data and fit it into a narrative which aids decisionmaking; learn how to take advantage of this tendency in order to deliver meaning, not just numbers and charts.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/vfYul2E56fo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/vfYul2E56fo&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/vfYul2E56fo&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 652,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        356
      ],
      "title": "Fake It Til You Make It: Unit Testing Patterns With Mocks and Fakes",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T04:15:07Z",
      "added": "2012-03-12T04:15:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hvPYuqzTPIk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "fake-it-til-you-make-it-unit-testing-patterns-wi",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this talk, aimed at intermediate Pythonistas, we'll have a look at some common, simple patterns in code, and the testing patterns that go with them. We'll also discover what makes some code more testable than others, and how mocks and fakes can help isolate the code to be tested (and why you want to do that). Finally, we'll touch on some tools to help make writing and running tests easier.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hvPYuqzTPIk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hvPYuqzTPIk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hvPYuqzTPIk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 642,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        225
      ],
      "title": "Fast Test, Slow Test",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T23:45:06Z",
      "added": "2012-03-11T23:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=RAxiiRPHS9k",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "fast-test-slow-test",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Most unit tests aren't and their authors suffer for it. What is a unit test, really? How can writing them prevent classic testing problems? If you do write them, what trade-offs are you implicitly making?</p>",
      "thumbnail_url": "http://img.youtube.com/vi/RAxiiRPHS9k/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/RAxiiRPHS9k&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/RAxiiRPHS9k&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 624,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        226
      ],
      "title": "Graph Processing in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T04:00:06Z",
      "added": "2012-03-11T04:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Mv3xgBQJPaE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "graph-processing-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Graphs are everywhere - from your distributed source code control to Twitter analytics. This session presents a set of three problems and shows how they can be decomposed into operations on graphs, and then demonstrates solutions using the various graph libraries available for (or accessible to) Python. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/Mv3xgBQJPaE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Mv3xgBQJPaE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Mv3xgBQJPaE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 625,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "How to make your websites more accessible",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T04:00:06Z",
      "added": "2012-03-11T04:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=jOu0D9ttCFI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-to-make-your-websites-more-accessible",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Is your website accessible? Have you tested it? What does it even mean for a website to be accessible?  In this talk we'll show some of the most common problems disabled users have and demonstrate how to fix them.  I'll also introduce you to some tools that are written in Python to help you determine how accessible your site is.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/jOu0D9ttCFI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/jOu0D9ttCFI&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/jOu0D9ttCFI&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 622,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Introduction and Welcome",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T00:06:13Z",
      "added": "2012-03-11T00:06:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=yflKOoAohEk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-and-welcome",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/yflKOoAohEk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/yflKOoAohEk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/yflKOoAohEk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 639,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        76
      ],
      "title": "Introduction to PDB",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T10:15:07Z",
      "added": "2012-03-11T10:15:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=vfPtGsSJldg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-pdb",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>PDB is an interactive debugging environment for Python programs. It allows you to pause your program, look at the values of variables, and watch program execution step-by-step, so you can understand what your program is actually doing, as opposed to what you think it's doing. This talk will show novice and intermediate Python\r\nusers how to use PDB to troubleshoot existing code.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/vfPtGsSJldg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/vfPtGsSJldg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/vfPtGsSJldg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 650,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        355
      ],
      "title": "Introspecting Running Python Processes",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T02:30:08Z",
      "added": "2012-03-12T02:30:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=YdnBK5yO4zU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introspecting-running-python-processes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Understanding the internal state of a running system can be vital to maintaining a high performance, stable system, but conventional approaches such as logging and error handling only expose so much. This talk will touch on how to instrument Python programs in order to observe the state of the system, measure performance, and identify ongoing problems.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/YdnBK5yO4zU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/YdnBK5yO4zU&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/YdnBK5yO4zU&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 636,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        329,
        328,
        330,
        349
      ],
      "title": "IPython: Python at your fingertips",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T10:00:06Z",
      "added": "2012-03-11T10:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=26wgEsg9Mcc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "ipython-python-at-your-fingertips",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>IPython is widely used in the scientific community, but its various tools can be used in any context.  IPython gets you as close as possible to the Python language, with an array of tools for productive work: at the terminal, in GUIs, through a web browser, and in high-level parallel computing.\r\n\r\nThis talk will explain the design of IPython and provide short, hands-on demos of its main features.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/26wgEsg9Mcc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/26wgEsg9Mcc&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/26wgEsg9Mcc&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 628,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Keynote: Paul Graham, YCombinator",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:30:05Z",
      "added": "2012-03-11T09:30:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=R9ITLdmfdLI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-paul-graham-ycombinator",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/R9ITLdmfdLI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/R9ITLdmfdLI&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/R9ITLdmfdLI&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 641,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Keynote: Stormy Peters, Mozilla Corporation",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T20:00:06Z",
      "added": "2012-03-11T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=KUpIFhNW89A",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-stormy-peters-mozilla-corporation",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/KUpIFhNW89A/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/KUpIFhNW89A&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/KUpIFhNW89A&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 644,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        353
      ],
      "title": "Make Sure Your Programs Crash",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T01:30:08Z",
      "added": "2012-03-12T01:30:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=OBbvj0WWT-g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "make-sure-your-programs-crash",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>With Python, segmentation faults and the like simply don't happen -- programs do not crash. However, the world is a messy, chaotic place. What happens when your programs crash? I will talk about how to make sure that your application survives crashes, reboots and other nasty problems.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/OBbvj0WWT-g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/OBbvj0WWT-g&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/OBbvj0WWT-g&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 627,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        342
      ],
      "title": "Non-Profit Centers of FLOSS Development",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T04:15:06Z",
      "added": "2012-03-11T04:15:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9q8LTZSvpr8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "non-profit-centers-of-floss-development",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Free, Libre & Open Source Software (FLOSS) began as a not-for-profit endeavor. FLOSS licenses permit commercial & non-commercial activity, but the heart of FLOSS remains in the not-for-profit space.  Kuhn will discuss advantages of non-profit structure and how non-profits facilitate neutral territory.  Kuhn will also present options for projects that seek to operate officially as a non-profit org.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9q8LTZSvpr8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9q8LTZSvpr8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9q8LTZSvpr8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 631,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        345,
        344
      ],
      "title": "PBS KIDS: Building a login system for kids and teens in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:45:06Z",
      "added": "2012-03-11T09:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=-Mx1JVTFOBY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pbs-kids-building-a-login-system-for-kids-and-te",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Our challenge was to create a login system for little people who might barely read, maybe no email, perhaps no home computer. And we had to watch out for privacy laws - especially tough for minors. But these kids want to play games, write stories, and create online avatars to share and compete against their buddies.  Listen to how we developed the PBS KIDS login and moderation system in Django.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/-Mx1JVTFOBY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/-Mx1JVTFOBY&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/-Mx1JVTFOBY&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 646,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        113
      ],
      "title": "Permission or Forgiveness?",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T01:45:08Z",
      "added": "2012-03-12T01:45:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=AZDWveIdqjY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "permission-or-forgiveness",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Grace Murray Hopper's famous motto, \"It's easier to ask forgiveness than permission\", has many useful applications -- in Python, in concurrency, in networking, as well of course as in real life.  However, it's not universally valid.  This talk explores both useful and damaging applications of this principle.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/AZDWveIdqjY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/AZDWveIdqjY&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/AZDWveIdqjY&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 633,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        189
      ],
      "title": "Practical Machine Learning in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:45:06Z",
      "added": "2012-03-11T09:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=__s45TTXxps",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "practical-machine-learning-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>There are a plethora of options when it comes to deciding how to add a machine learning component to your python application.  In this talk, I'll discuss why python as a language is well-suited to solving these particular problems, the tradeoffs of different machine learning solutions for python applications, and some tricks you can use to get the most out of whatever package you decide to use.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/__s45TTXxps/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/__s45TTXxps&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/__s45TTXxps&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 653,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        221
      ],
      "title": "Practicing Continuous Deployment",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T04:30:08Z",
      "added": "2012-03-12T04:30:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=QGfxLXoMpPk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "practicing-continuous-deployment",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Practice iterative development like the pros. Release sooner, faster, and more often.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QGfxLXoMpPk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QGfxLXoMpPk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QGfxLXoMpPk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 687,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [],
      "title": "Putting Python in PostgreSQL",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T07:30:08Z",
      "added": "2012-03-12T07:30:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3dMq_3UUPxg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "putting-python-in-postgresql",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>PostgreSQL is pretty powerful all on it's own, but did you know you can use Python as a stored procedure language? Not only does using a familiar language make development easier, but you get the power of the standard library and PyPi to boot.  Come learn the ins and outs of putting Python in your DB. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/3dMq_3UUPxg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3dMq_3UUPxg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3dMq_3UUPxg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 651,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        87
      ],
      "title": "pytest - rapid and simple testing with Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T04:15:07Z",
      "added": "2012-03-12T04:15:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9LVqBQcFmyw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pytest-rapid-and-simple-testing-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The py.test tool presents a rapid and simple way to write tests.  This talks introduces common testing terms, basic examples and unique pytest features for writing unit- or functional tests: assertions and dependency injection mechanisms.  We also look at other features like distributing test load, new plugins and reasons why some Redhat and Mozilla people choose pytest over other approaches.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9LVqBQcFmyw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9LVqBQcFmyw&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9LVqBQcFmyw&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 647,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        354
      ],
      "title": "Sage: Open Source Math in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T01:45:08Z",
      "added": "2012-03-12T01:45:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=YyEReiAYGlU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sage-open-source-math-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A quick introduction to Sage, an open-source mathematics package for experimentation in all areas of mathematics.  There will be some brief remarks and demos of what Sage is capable of.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/YyEReiAYGlU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/YyEReiAYGlU&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/YyEReiAYGlU&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 632,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        347,
        346
      ],
      "title": "Scalability at YouTube",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:45:06Z",
      "added": "2012-03-11T09:45:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=G-lGCC4KKok",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "scalability-at-youtube",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk covers scalability at YouTube.  It's given by one of the original engineers at YouTube, Mike Solomon.  It's a rare glimpse into the heart of YouTube which is one of the largest websites in the world, and one of the few extremely large websites to be written in Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/G-lGCC4KKok/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/G-lGCC4KKok&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/G-lGCC4KKok&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 643,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        352
      ],
      "title": "Speedily Practical Large-Scale Tests",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T00:00:07Z",
      "added": "2012-03-12T00:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=1VZfL9JVgFg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "speedily-practical-large-scale-tests",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Mozilla's projects have thousands of tests, so we've had to venture beyond vanilla test runners to keep things manageable. Our secret sauce can be used with your project as well. Reach beyond the test facilities that came with your project, harnessing pluggable test frameworks, dynamically reordering tests for speed, exploring various mocking libraries, and profiling your way to testing nirvana.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/1VZfL9JVgFg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/1VZfL9JVgFg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/1VZfL9JVgFg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 645,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        246
      ],
      "title": "Static analysis of Python extension modules using GCC",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T01:45:07Z",
      "added": "2012-03-12T01:45:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=n6145JSeqWc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "static-analysis-of-python-extension-modules-using",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Want to analyse C/C++ code using Python?  I've written a plugin for GCC that embeds Python inside the compiler, allowing you to write new C/C++ compilation passes in Python.  I've used this to build a static analysis tool that understands the CPython extension API, and can automatically detect reference-counting bugs, and other errors.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/n6145JSeqWc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/n6145JSeqWc&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/n6145JSeqWc&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 681,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        212
      ],
      "title": "Stepping Through CPython",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T07:00:07Z",
      "added": "2012-03-12T07:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=XGF3Qu4dUqk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "stepping-through-cpython",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Ever wondered how CPython actually works internally?  This talk will show you.  We start with a simple Python program, then slowly step through CPython, showing in exhaustive detail what happens when it runs that program.  Along the way we'll examine the design and implementation of various major CPython subsystems and see how they fit together.  The audience should be conversant in C and Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/XGF3Qu4dUqk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/XGF3Qu4dUqk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/XGF3Qu4dUqk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 630,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        237,
        343
      ],
      "title": "Stop Mocking, Start Testing",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T09:30:05Z",
      "added": "2012-03-11T09:30:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Xu5EhKVZdV8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "stop-mocking-start-testing",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Project Hosting at Google Code is a large, well-established system written mostly in Python. We'll share our battle-born convictions about creating tests for test-unfriendly code and the larger topic of testing.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Xu5EhKVZdV8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Xu5EhKVZdV8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Xu5EhKVZdV8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 637,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        350
      ],
      "title": "Throwing Together Distributed Services With Gevent",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-11T10:00:06Z",
      "added": "2012-03-11T10:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tYk4_Nzl-Gg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "throwing-together-distributed-services-with-geven",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this talk we learn how to throw together a distributed system using gevent and a simple framework called gservice. We'll go from nothing to a distributed messaging system ready for production deployment based on experiences building scalable, distributed systems at Twilio.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tYk4_Nzl-Gg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tYk4_Nzl-Gg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tYk4_Nzl-Gg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 620,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        48
      ],
      "title": "DevOps for Python: Doing More With Less",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:13Z",
      "added": "2012-03-11T00:06:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=sdkAXM36C7M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "devops-for-python-doing-more-with-less",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The world of infrastructure as code is becoming far more pervasive and many Python developers are trying to find a way to get started. This class will get you up and running with Chef and Fabric to manage your systems be they in the cloud or under your desk.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/sdkAXM36C7M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/sdkAXM36C7M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/sdkAXM36C7M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 616,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        336
      ],
      "title": "Documenting Your Project With Sphinx",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=L-fXOoxrt0M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "documenting-your-project-with-sphinx",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python projects can succeed or fail because of their documentation.\r\nThanks to Sphinx, Python now has a \u201cdocumentation framework\u201d with\r\nindexing, syntax highlighting, and integration with your code.\r\nStudents will be given a small undocumented Python package,\r\nand during the exercises they will give the package\r\na tutorial and reference manual.\r\nPlus: deployment and theming!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/L-fXOoxrt0M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/L-fXOoxrt0M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/L-fXOoxrt0M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 614,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        334
      ],
      "title": "High Performance Python I",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Iw9-GckD-gQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "high-performance-python-i",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>At EuroPython 2011 I ran a very hands-on tutorial for High Performance Python techniques. This updated tutorial will cover profiling, PyPy, Cython, numpy, NumExpr, ShedSkin, multiprocessing, ParallelPython and pyCUDA. Here's a 55 page PDF write-up of the EuroPython material: http://ianozsvald.com/2011/07/25/high-performance-python-tutorial-v0-2-from-europython-2011/</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Iw9-GckD-gQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Iw9-GckD-gQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Iw9-GckD-gQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 623,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        340
      ],
      "title": "High Performance Python II",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T04:00:05Z",
      "added": "2012-03-11T04:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=xHqlzuPq_qQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "high-performance-python-ii",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this tutorial, I will cover how to write very fast Python code for data analysis.  I will briefly introduce NumPy and illustrate how fast code for Python is written in SciPy using tools like Fwrap / F2py and Cython.   I will also describe interesting new approaches to creating fast code that is leading changes to NumPy on a fundamental level.  </p>",
      "thumbnail_url": "http://img.youtube.com/vi/xHqlzuPq_qQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/xHqlzuPq_qQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/xHqlzuPq_qQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 615,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        335,
        64
      ],
      "title": "Introduction to Game Development",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=duc3jYgAaR0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-game-development",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial will walk the attendees from some introductory game development theory (what makes a good game) and through development of a simple game (how to make a good game) with time left over for some experimentation and exploration of different types of games.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/duc3jYgAaR0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/duc3jYgAaR0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/duc3jYgAaR0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 621,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        220
      ],
      "title": "Introduction to Interactive Predictive Analytics in Python with scikit-learn",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:13Z",
      "added": "2012-03-11T00:06:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Zd5dfooZWG4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-interactive-predictive-analytics",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The goal of this tutorial is to give the attendee a first experience of machine learning tools applied to practical software engineering tasks such as language detection of tweets, topic classification of web pages, sentiment analysis of customer products reviews and facial recognition in pictures from the web or from your own webcam.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Zd5dfooZWG4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Zd5dfooZWG4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Zd5dfooZWG4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 640,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        38
      ],
      "title": "Making interactive maps for the web",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T18:15:04Z",
      "added": "2012-03-11T18:15:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=g0CankXpFZg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-interactive-maps-for-the-web",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial teaches students how to create beautiful, interactive maps for the web. When asked to display geodata, most developers decide to put some big red markers on an embeddable Google Map and call it a day. If you're interested in creating maps that are more beautiful, more interactive, and more usable, this tutorial is for you.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/g0CankXpFZg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/g0CankXpFZg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/g0CankXpFZg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 618,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        337
      ],
      "title": "Optimize Performance and Scalability with Parallelism and Concurrency",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ULdDuwf48kM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "optimize-performance-and-scalability-with-paralle",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>From how the operating system handles your requests through design principles on how to use concurrency and parallelism to optimize your program's performance and scalability.  We will cover processes, threads, generators, coroutines, non-blocking IO, and the gevent library.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ULdDuwf48kM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ULdDuwf48kM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ULdDuwf48kM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 617,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        331
      ],
      "title": "Plotting with matplotlib",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=P7SVi0YTIuE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "plotting-with-matplotlib",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>When it comes to plotting with Python many people think about matplotlib.\r\nIt is widely used and provides a simple interface for creating a wide variety\r\nof plots from very simple diagrams to sophisticated animations.\r\nThis tutorial is a hands-on introduction that teaches the basics of matplotlib.\r\nStudents will learn how to create publication-ready plots with just a few lines\r\nof Python. \r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/P7SVi0YTIuE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/P7SVi0YTIuE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/P7SVi0YTIuE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 613,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        98
      ],
      "title": "Python Epiphanies",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Pi9NpxAvYSs",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-epiphanies",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial is for software developers who've been using Python with success for a while but are looking for a deeper understanding of the language.  It demystifies a number of language features that are often misunderstood.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Pi9NpxAvYSs/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Pi9NpxAvYSs?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Pi9NpxAvYSs?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 619,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        338
      ],
      "title": "Social Network Analysis with Python",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-11T00:06:12Z",
      "added": "2012-03-11T00:06:12Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qgGqaBAEy3Q",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "social-network-analysis-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Social Network data permeates our world -- yet we often don't know what to do with it. In this tutorial, I will introduce both theory and practice of Social Network Analysis -- gathering, analyzing and visualizing data using Python and other open-source tools. I will walk the attendees through an entire project, from gathering and cleaning data to presenting results.\r\n\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qgGqaBAEy3Q/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qgGqaBAEy3Q&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qgGqaBAEy3Q&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 608,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        332
      ],
      "title": "Bayesian statistics made (as) simple (as possible)",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bobeo5kFz1g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "bayesian-statistics-made-as-simple-as-possible",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial is an introduction to Bayesian statistics using Python.  My goal is to help participants understand the concepts and solve real problems.  We will use material from my book, Think Stats: Probability and Statistics for Programmers (O\u2019Reilly Media).</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bobeo5kFz1g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bobeo5kFz1g?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bobeo5kFz1g?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 611,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        273
      ],
      "title": "Data analysis in Python with pandas ",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=w26x-z-BdWQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "data-analysis-in-python-with-pandas",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The tutorial will give a hands-on introduction to manipulating and analyzing large and small structured data sets in Python using the pandas library. While the focus will be on learning the nuts and bolts of the library's features, I also aim to demonstrate a different way of thinking regarding structuring data in memory for manipulation and analysis.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/w26x-z-BdWQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/w26x-z-BdWQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/w26x-z-BdWQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 610,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        25
      ],
      "title": "Django in Depth",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=t_ziKY1ayCo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "django-in-depth",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A tutorial that goes beyond all other Django tutorials; we'll dive deep into the guts of the framework, and learn how each commonly-used component -- ORM, templates, HTTP handling, views and the admin -- work from the bottom up, covering both public and internal APIs in excruciating detail.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/t_ziKY1ayCo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/t_ziKY1ayCo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/t_ziKY1ayCo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 607,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        331
      ],
      "title": "Faster Python Programs through Optimization",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Bs6-sai1fKE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "faster-python-programs-through-optimization",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial provides an overview of techniques to improve the performance of Python programs. The focus is on concepts such as profiling, difference of data structures and algorithms as well as a selection of tools and libraries that help to speed up Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Bs6-sai1fKE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Bs6-sai1fKE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Bs6-sai1fKE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 612,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        28,
        333,
        104
      ],
      "title": "How to get the most out of your PyPy",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=oZw8m_lyhvo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-to-get-the-most-out-of-your-pypy",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>For many applications PyPy can provide performance benefits right out of the box. However, little details can push your application to perform much better.  In this tutorial we'll give you insights on how to push pypy to it's limites. We'll focus on understanding the performance characteristics of PyPy, and learning the analysis tools in order to maximize your applications performance.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/oZw8m_lyhvo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/oZw8m_lyhvo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/oZw8m_lyhvo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 604,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        96
      ],
      "title": "Introduction to Django",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:10Z",
      "added": "2012-03-11T00:06:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hp5ymCrD9yw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-django",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Django framework is a fast, flexible, easy to learn, and easy to use framework for designing and deploying web sites and services using Python.  In this session, we'll cover the fundamentals of development with Django, generate a Django data model, and put together a simple web site using the framework.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hp5ymCrD9yw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hp5ymCrD9yw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hp5ymCrD9yw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 605,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        329,
        328,
        330
      ],
      "title": "IPython in-depth: high-productivity interactive and parallel python",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:10Z",
      "added": "2012-03-11T00:06:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=2G5YTlheCbw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "ipython-in-depth-high-productivity-interactive-a",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>IPython provides tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer.\r\n\r\nWe will show how to use IPython in different ways, as: an interactive shell, an embedded shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/2G5YTlheCbw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/2G5YTlheCbw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/2G5YTlheCbw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 609,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        97
      ],
      "title": "Web scraping: Reliably and efficiently pull data from pages that don't expect it",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:11Z",
      "added": "2012-03-11T00:06:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=52wxGESwQSA",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "web-scraping-reliably-and-efficiently-pull-data",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Exciting information is trapped in web pages and behind HTML forms. In this tutorial, you'll learn how to parse those pages and when to apply advanced techniques that make scraping faster and more stable.\r\n\r\nWe'll cover parallel downloading with Twisted, gevent, and others; analyzing sites behind SSL; driving JavaScript-y sites with Selenium; and evading common anti-scraping techniques.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/52wxGESwQSA/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/52wxGESwQSA?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/52wxGESwQSA?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 606,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        127
      ],
      "title": "Writing a Pyramid application",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-11T00:06:10Z",
      "added": "2012-03-11T00:06:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NBSosX8xiRk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "writing-a-pyramid-application",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Pyramid is the web framework at the core of the Pylons Project. It's a \"pay only for what you eat\" framework. You can get started easily and learn new concepts as you go, and only if you need them. It's simple, well tested, well documented, and fast. This course will present Pyramid and lead you through the creation of a an application as the concepts from the framework are introduced.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/NBSosX8xiRk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NBSosX8xiRk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NBSosX8xiRk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  }
]