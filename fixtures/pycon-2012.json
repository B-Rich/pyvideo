[
  {
    "pk": 691,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        232
      ],
      "title": "1. PSF Sprints - Supporting the community one sprint at at time",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T01:30:17Z",
      "added": "2012-03-13T01:30:17Z",
      "video_mp4_length": null,
      "description": "<p>The PSF Sprint committee offers up to $300 USD to groups that organize sprint efforts on open source projects in the Python world. From working on Python itself, to the vast array of projects in the community, we take great interest in keeping you interested. We're also interested in buying you dinner, providing a place to work at, and buying t-shirts or other goodies for sprint attendees.</p>\n<ul><li>Committee Goals<ul><li>Fund existing sprint groups<li>Get new groups interested in sprinting<li>Generate interest in contribution to Python projects<li>Advertise sprint events, including those at conferences<li>Have fun, learn, and contribute with other community members</ul><li>How We Operate<ul><li>Receive applications, vote, advertise, reimburse after event</ul><li>Past Sponsorships<ul><li>packaging, Genshi, matplotlib</ul><li>Upcoming Sponsorships<ul><li>PyCon (will update closer to conference)</ul><li>How To Receive Funding<ul><li>How to apply, how to be reimbursed</ul>",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=AeQxx4zXd5Q",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "1-psf-sprints-supporting-the-community-one-spr",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Formed in 2010, the PSF Sprints committee set out to support local communities getting together to make great software by funding their sprints with up to $300 USD. No matter the project, the PSF wants to help you contribute to the Python ecosystem. Come see what we're doing, how we're doing it, who we've supported, and see how you can take part as well.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/AeQxx4zXd5Q/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/AeQxx4zXd5Q?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/AeQxx4zXd5Q?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 701,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        386,
        387
      ],
      "title": "10. FOSS@RIT: Python-Powered Student Engagement",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:30:34Z",
      "added": "2012-03-13T03:30:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=O8WXXtDUUOE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "10-fossrit-python-powered-student-engagement",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>FOSS@RIT is an applied research lab at Rochester Institute of Technology focused on promoting free/open source software and open web technologies. Students and staff will discuss the evolution of the lab in general, and the RIT Fedora Remixerator - a web application running on Django that allows users to create an RIT-themed Fedora LiveCD.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/O8WXXtDUUOE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/O8WXXtDUUOE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/O8WXXtDUUOE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 702,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        388
      ],
      "title": "11. A Startup Junkie's Journey to Python via Java, C#, Ruby and Scala",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:30:34Z",
      "added": "2012-03-13T03:30:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ktLyuWoRHH8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "11-a-startup-junkies-journey-to-python-via-java",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Between choosing technologies, bootstrapping your company and product and hiring the critical early team, startup CTO's have their hands full. I've done it many times, and over the years I have honed my view of how to build something new from scratch. We'll focus on selecting tools and technologies, and on my journey to Python as the core of my newest company. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/ktLyuWoRHH8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ktLyuWoRHH8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ktLyuWoRHH8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 706,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        336
      ],
      "title": "12. Accessibility and You",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:45:15Z",
      "added": "2012-03-13T03:45:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tKTW8Jd0BlQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "12-accessibility-and-you",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>An introduction into the world of 508 compliance.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tKTW8Jd0BlQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tKTW8Jd0BlQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tKTW8Jd0BlQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 753,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        195
      ],
      "title": "14. preshrunk-cotton: Windows Help Files for Lazy People",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T09:45:14Z",
      "added": "2012-03-14T09:45:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=A3Qe5wUbXzM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "14-preshrunk-cotton-windows-help-files-for-lazy",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Generating a Compiled HTML Help (CHM) file is often necessary when distributing applications on Microsoft Windows platforms.  However, many developers may dislike authoring HTML and/or cannot use Microsoft\u2019s help tools.  preshrunk-cotton streamlines the creation of CHM files by allowing the author to quickly write documentation in Textile markup and build the help file on almost any platform.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/A3Qe5wUbXzM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/A3Qe5wUbXzM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/A3Qe5wUbXzM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 815,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        412
      ],
      "title": "18. Bump Pumps Up with Diesel",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T00:15:27Z",
      "added": "2012-03-15T00:15:27Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ZwBiQEHS4T8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "18-bump-pumps-up-with-diesel",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Bump Technologies\u2019 Jamie Turner explains Diesel, an open-source evented networking framework, and how it's used at Bump, an Android and iOS app with over 70 million downloads.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ZwBiQEHS4T8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ZwBiQEHS4T8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ZwBiQEHS4T8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 754,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        410
      ],
      "title": "19. Millions of Genes with Python and Jython",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T09:45:15Z",
      "added": "2012-03-14T09:45:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Rmg4-Ae1P1o",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "19-millions-of-genes-with-python-and-jython",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Analysis and Annotation Engineering group at the Broad Institute uses cpython and jython as fundamental technologies to help sequence, analyze, and publish hundreds of bacterial and viral genomes every year. This poster outlines how we use python to allow our small team to accomplish big things.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Rmg4-Ae1P1o/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Rmg4-Ae1P1o&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Rmg4-Ae1P1o&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 692,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        377
      ],
      "title": "2. Twisted Matrix High Scores",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T02:30:13Z",
      "added": "2012-03-13T02:30:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9XlPKEessD8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "2-twisted-matrix-high-scores",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Do you have what it takes to get to the top of http://twistedmatrix.com/highscores?</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9XlPKEessD8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9XlPKEessD8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9XlPKEessD8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 816,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        413
      ],
      "title": "22. Quantitative Finance Research with Python: Statistical arbitrage.",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T00:15:29Z",
      "added": "2012-03-15T00:15:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=MIAKOMzRl1I",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "22-quantitative-finance-research-with-python-st",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Recently, many projects have been developed to make Python useful to do quantitative finance research. We proposed us not only to show you the integration of these tools to perform time series analysis and modeling, but also to show you how we can search for cointegrated pairs of asset and set up a statistical arbitrage strategy - pairs trading - to get potential profit from financial market.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/MIAKOMzRl1I/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/MIAKOMzRl1I?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/MIAKOMzRl1I?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 817,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        414
      ],
      "title": "23. Round the world with a million objects",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T00:15:29Z",
      "added": "2012-03-15T00:15:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=q_i3CHNITQ4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "23-round-the-world-with-a-million-objects",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python has provided a suite of tools required for our Lagrangian Particle Modeling Framework that is used for simulation of atmospheric transport. The Python language is used for generating input files for our FORTRAN codebase, using f2py to control several aspects of running the model and reading output, and dynamically generating content with matplotlib for web-display using Plone.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/q_i3CHNITQ4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/q_i3CHNITQ4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/q_i3CHNITQ4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 738,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "25. An Overview of the Python African Computational Science and Engineering Tour Project ",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:15:14Z",
      "added": "2012-03-14T06:15:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=4bWC_VXffq4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "25-an-overview-of-the-python-african-computation",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Godfrey Ejiroghene Akpojotor, Louis Ehwerhemuepha\r\n\r\nPervading of computer activities into the teaching/learning process and research make them constitute a third pillar in science and engineering (S & E) in addition to theory and experiment. Python African Computational S & E Tour is to ease the learners into programming with Python and to use it for modeling, simulation and visualization to aid teaching/learning process and research in Africa.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/4bWC_VXffq4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/4bWC_VXffq4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/4bWC_VXffq4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 729,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        403
      ],
      "title": "26. Data analysis and visualization in atmospheric sciences",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:35:30Z",
      "added": "2012-03-14T06:00:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=v7HH_CNIdXc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "26-data-analysis-and-visualization-in-atmospheri",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This poster demonstrates the Python based data analysis and visualization in atmospheric sciences with particular focus on modeled and observational aspects of marine clouds.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/3LcF2XBqbog/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3LcF2XBqbog?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3LcF2XBqbog?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 730,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        404
      ],
      "title": "27. Reading and writing spatial data for the non-spatial programmer",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:14Z",
      "added": "2012-03-14T06:00:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ziz2lh-14i8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "27-reading-and-writing-spatial-data-for-the-non-",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Location has become mainstream in society and computing. Developers are being tasked with working with spatial data of varying formats. Lucky for Python developers, there are many packages and libraries that can help us make sense of and utilize spatial data, and this poster will explain some of those options.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ziz2lh-14i8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ziz2lh-14i8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ziz2lh-14i8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 731,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        405
      ],
      "title": "29. Keeping the Chandra satellite cool with Python and Xija",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:15Z",
      "added": "2012-03-14T06:00:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=dhUo_lpD7v0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "29-keeping-the-chandra-satellite-cool-with-pytho",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Chandra X-ray Observatory has been producing significant astronomical discoveries since its launch by NASA in July of 1999.  The Chandra operations team uses Python for predictive thermal modeling of the spacecraft to maintain a safe thermal environment.  This poster describes the Xija modeling framework that is used to create, calibrate, and compute these thermal models.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/dhUo_lpD7v0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/dhUo_lpD7v0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/dhUo_lpD7v0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 693,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        379,
        378
      ],
      "title": "3. Hacking for Humanity with Python: The CuiBono political app",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T02:45:13Z",
      "added": "2012-03-13T02:45:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=WMUXMqYhQ-M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "3-hacking-for-humanity-with-python-the-cuibono",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This poster discusses the development of the CuiBono \"political ad truth detector\" app, from concept, to hackathon, to launch. The poster also talks about Python's prominence at the Philadelphia Random Hacks of Kindness hackathon (Winter 2011)</p>",
      "thumbnail_url": "http://img.youtube.com/vi/WMUXMqYhQ-M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/WMUXMqYhQ-M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/WMUXMqYhQ-M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 732,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        406
      ],
      "title": "31. ProofCheck: Checking Mathematical Proofs written in TeX ",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:15Z",
      "added": "2012-03-14T06:00:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qLXllxd4Z1c",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "31-proofcheck-checking-mathematical-proofs-writ",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>ProofCheck is a set of Python scripts which parse and check mathematics written using TeX.  Its homepage is www.proofcheck.org.  Unlike computer proof assistants which require immersion in the equivalent of a programming language, ProofCheck attempts to handle mathematical language formalized according to the author's preferences as much as possible. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/qLXllxd4Z1c/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qLXllxd4Z1c?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qLXllxd4Z1c?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 733,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        407
      ],
      "title": "32. Python in Computer-Aided Drug Discovery ",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:16Z",
      "added": "2012-03-14T06:00:16Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3FcAcE3Zq2Q",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "32-python-in-computer-aided-drug-discovery",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Computational tools are an integral part of the modern drug-discovery process.  At NIBR, we leverage Python to great success in all stages of drug discovery. Not only can we easily deploy new tools to our scientists easily using tools like Django, but Python's approachability (that \"fits your brain\" character) allows scientists with no programming experience to start coding themselves!\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/3FcAcE3Zq2Q/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3FcAcE3Zq2Q&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3FcAcE3Zq2Q&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 734,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        235
      ],
      "title": "34. CrossCompute is a web platform where users can run algorithms",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:16Z",
      "added": "2012-03-14T06:00:16Z",
      "video_mp4_length": null,
      "description": "<p>CrossCompute is a site where you can run mathematical models and algorithms submitted by researchers. If you are a researcher and you submit your algorithm, you'll get paid each time it runs. We'll send you a URL where users can run your model on their data as many times as they want. More users mean more feedback that you can use to improve your model.</p>\n<p>Here is an example: Suppose a mathematician in the US develops an operations research model for placing schools in a community given the locations of existing schools and households, and decides to charge ten cents each time it runs. Then a business owner in Ghana runs the model over the internet to place stores in his district, and saves money because he didn't have to hire a consulting firm or buy a software package. Meanwhile, the mathematician in the US uses the algorithm revenue to fund research to improve the model.</p>\n<p>Now is an exciting time to get involved in data analytics for your city or local government. Governments need to prioritize limited resources like emergency response firefighters, police officers and city inspectors. I urge you to contact your local Mayor's office to learn about the challenges they are facing. Then, create a tool to make their life easier. You can send the tool to support@crosscompute.com where it will join a growing collection of analytics for the public good. You will get the credit for the algorithm, the revenue and users from around the world.</p>",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=U1Y5Uxn2Rcw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "34-crosscompute-is-a-web-platform-where-users-ca",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Have you developed a mathematical model or computational / visualization algorithm? Your algorithm could be useful worldwide to people who face a real-world problem but do not want to write code. Professionals in industry, scientists in other fields or researchers in developing countries can quickly apply your work to their domain with a web-based cloud-computing platform like CrossCompute.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/U1Y5Uxn2Rcw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/U1Y5Uxn2Rcw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/U1Y5Uxn2Rcw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 735,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        408
      ],
      "title": "35. PyMC: Markov chain Monte Carlo in Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:37:05Z",
      "added": "2012-03-14T06:00:16Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=x-JDra36m38",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "35-pymc-markov-chain-monte-carlo-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>PyMC implements a suite of Markov chain Monte Carlo (MCMC) sampling algorithms making it extremely flexible, extensible and applicable to a large suite of statistical modeling problems. PyMC's clear, concise syntax allows scientists to flexibly implement Bayesian models without hand-coding samplers.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/MJpp5jlBwuE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/MJpp5jlBwuE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/MJpp5jlBwuE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 736,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        409
      ],
      "title": "36. Using Python for robotics with Aldebaran's humanoid robot NAO.",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:16Z",
      "added": "2012-03-14T06:00:16Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Me9SZohibPQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "36-using-python-for-robotics-with-aldebarans-hu",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this poster session, we shall review how Python can be used\r\nto control and program Aldebaran's humanoid robot NAO.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Me9SZohibPQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Me9SZohibPQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Me9SZohibPQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 737,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        186
      ],
      "title": "37. Building a Robot that Can Play Angry Birds on a Smartphone (or Robots are the Future of Testing)",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T06:00:17Z",
      "added": "2012-03-14T06:00:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=KUOoStyV7Zs",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "37-building-a-robot-that-can-play-angry-birds-on",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A poster session for a hands-on demo of \"BitbeamBot\". It started as an art project, but it has a much more serious practical application: mobile web testing. To trust that your mobile app truly works, you need an end-to-end test on the actual device. BitbeamBot is an Arduino-powered open-source hardware CNC robot that can test any application on any mobile device. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/KUOoStyV7Zs/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/KUOoStyV7Zs&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/KUOoStyV7Zs&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 723,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        399
      ],
      "title": "38. ABC: the mother of Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:32:38Z",
      "added": "2012-03-14T02:15:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Qh4Gkkgi1Mw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "38-abc-the-mother-of-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Before Python, Guido was a contributor to the ABC language and environment. ABC was designed to teach programming, and introduced many \"Pythonic\" ideas: integrated dicts and tuples, structure by indentation, strong typing without declarations etc. With high demand for Python in education, the legacy of ABC is more relevant than ever as we design courses and environments for learners. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/u2-MbpX-bxQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/u2-MbpX-bxQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/u2-MbpX-bxQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 724,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        205
      ],
      "title": "39. Python under PyCScope",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:33:38Z",
      "added": "2012-03-14T02:15:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Hx6VxszpvsY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "39-python-under-pycscope",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>CScope has been around for years, and is a very useful tool to get a handle on C source code. Pycscope is an attempt to bring those benefits to the world of Python. Unfortunately, the existing version is woefully out of date. We take a walk through an attempt to update it, correct some flaws and make it more generally useful to us, while giving us a view into the Python parser.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QCQ0EX6SLl4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QCQ0EX6SLl4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QCQ0EX6SLl4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 694,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        380
      ],
      "title": "4. How the Tor Project uses Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:00:37Z",
      "added": "2012-03-13T03:00:37Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=CFt6QrzavH0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "4-how-the-tor-project-uses-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>While the Tor client software itself is written in C, there's more to the Tor project than just the core client. Come see how the Tor project uses Python for network analysis, metrics, and various front- and back-end services.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/CFt6QrzavH0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/CFt6QrzavH0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/CFt6QrzavH0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 725,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        215,
        400
      ],
      "title": "40. MediaGoblin: The Road to Federation",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T18:26:21Z",
      "added": "2012-03-14T02:15:16Z",
      "video_mp4_length": null,
      "description": "<p>From just a gleam in founder Chris Webber's eye to a full tilt media hosting project supporting photos, HTML5 video, and more, the road to federation has been a wild ride so far. We owe a lot to the huge community of fellow federators whose work on the ostaus library enabled us to start in the middle with our own not-quite-finished spin, Kuneco. Kudos to the GNU project for getting excited about the web with us. We're also thankful for the massive outpouring of project love that channeled itself through transifex and has made Media Goblin global-ready even though it isn't finished. Ever thought about switching databases midstream? Come talk to us, Mongo to SQL wasn't as bad as we'd been expecting. We'll also tell you all about our minimalist wsgi un-framework design and how we think it's working compared to Django or even Pylons/Pyramid.</p>\n<p>What's still left do? Smoother interoperations with allied projects like StatusNet and Diaspora. Support for more media types like 3D modelling and presentations. World domination... in a friendly way! Swing by if you're looking for a new project to get involved with or just want details to take back to your own.</p>",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=AMMBYLB3qd0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "40-mediagoblin-the-road-to-federation",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>From just a gleam in founder Chris Webber's eye to a full tilt media hosting project supporting photos, HTML5 video, and more, the road to federation has been a wild ride so far. Come talk to us about the challenges, the fun and the future. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/AMMBYLB3qd0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/AMMBYLB3qd0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/AMMBYLB3qd0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 814,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        411
      ],
      "title": "41. Git 'er Done Fast! Developing Apps for the Cloud with Django and PyMongo in 30 Minutes or Less",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T00:15:27Z",
      "added": "2012-03-15T00:15:27Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=fVpvd7OX6PQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "41-git-er-done-fast-developing-apps-for-the-cl",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Close your laptop lids and stop updating your Twitter stream! All it's going to take is 30 minutes of your time to turn yourself into a Django web app developing, MongoDB crushing machine. In this technical talk we'll start by coding our app up in Django, unleash the power of PyMongo on MongoDB and then deploy everything to the cloud with Git.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/fVpvd7OX6PQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/fVpvd7OX6PQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/fVpvd7OX6PQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 813,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        395,
        396,
        397,
        398
      ],
      "title": "42. The Future of Python Packaging",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-15T00:15:26Z",
      "added": "2012-03-15T00:15:26Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=OceCWIqZt7I",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "42-the-future-of-python-packaging",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>There are currently multiple methods for packaging, distributing, discovering, and installing Python software. This presentation will discuss the limitations of the current methods, the efforts to standardize Python packaging, and practical advice for developers to add support for the new packaging library, distutils2 (\"packaging\" in Python 3.3+), to their software.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/OceCWIqZt7I/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/OceCWIqZt7I?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/OceCWIqZt7I?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 726,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        401
      ],
      "title": "43. What is IPv6 and why does my website I need it",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:36:20Z",
      "added": "2012-03-14T02:15:16Z",
      "video_mp4_length": null,
      "description": "<p><b>Background</b></p>\n<p>On February 3rd, 2011 the world ran out of the IPv4 addresses that we know and love. The Internet continues to work thanks to technologies like NAT that enable private IP addresses like 192.168.1.1 and 10.0.0.1 to be reused across organizations. However, even these large blocks of private IP addresses are not large enough for large ISPs like Comcast in the United States that give several IP addresses to each customer (ex. cable set top box, voip, cable modem).</p>\n<p>To continue adding new customers large ISPs have begun deploying two technologies: IPv6 and large scale NAT.</p>\n<p>Large scale NAT is a way for large ISPs to put several of their customers behind a single public IP address. This means that the one public IPv4 address you used to have to yourself is now shared by you and several of your neighbors. It means that as a website owner it is now more difficult to discern anything useful from the IP addresses visiting your website.</p>\n<p>IPv6 solves the address exhaustion problem by moving from approximately 4 billion IP addresses to 3.4×10^38 IP addresses; more than the number of atoms on Earth. With plenty of IP addresses ISPs can now return to giving out unique, public IP addresses to each customer.</p>\n<p>Many mobile operators are already beginning to deploy IPv6. In 2009 Verizon issued a mandate that any LTE devices on its network support IPv6 with IPv4 support being listed as optional [1]. An IPv6-only device will still need access to the IPv4 Internet, however, IPv6 and IPv4 are not compatible. Providers like Verizon are putting in place protocol translation devices that inspect Internet traffic going through them and proxy IPv4-only websites to their IPv6 customers. While this may sound wonderful it means that mobile providers are inspecting and rewriting your packets. Making things more interesting is that this won't work securely over SSL. The solution is to enable IPv6 on your website so that IPv6-only hosts can directly access your content.</p>\n<p><b>Joining the IPv6 bandwagon</b></p>\n<p>Amazon's Elastic Load Balancer supports IPv6 and is already enabled in all east coast availability zones [2]. If you're already using ELB enabling IPv6 on your website is as easy as making a single DNS change. Or so we'd hope, there are still some impediments to a world where your site runs seamlessly on IPv6.</p>\n<p><b>The user with broken IPv6</b></p>\n<p>There are people in the world with broken or inferior IPv6 connectivity and a web browser or operating system that attempt to use IPv6 anyway. What this means is that if you turn on IPv6 on your website you have the potential to cut off those users from your site. In this talk I'll discuss methods for measuring and analyzing this loss before your broadly enable IPv6 so that you can make an informed decision about when and how to flip the switch.</p>\n<p><b>Geo IP</b></p>\n<p>Geo IP libraries today are still coming to terms with IPv6. One vendor in particular is working on IPv6 but only provides limited support in their free libraries and not yet in their python driver. In their commercial library, the one generally considered better, they do not support IPv6 yet due to lack of data [3].</p>\n<p><b>IPv6 without Amazon</b></p>\n<p>At Eventbrite we do development inside of Virtual Box virtual machines. In this talk I'll discuss how we configure IPv6 on both the host and guest operating systems so that we can test IPv6 before we push to Amazon.</p>\n<p><b>IP Address Validation</b></p>\n<p>If you accept IP addresses from end users check your IP address validation routines (Django has support, see GenericIPAddressField).</p>\n<p><b>References</b></p><ul><li>[1] <a href=\"http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/\">http://www.circleid.com/posts/20090609_verizon_mandates_ipv6_support_for_next_gen_cell_phones/</a></li><li>[2] <a href=\"http://www.allthingsdistributed.com/2011/05/aws_ipv6.html\">http://www.allthingsdistributed.com/2011/05/aws_ipv6.html</a></li><li>[3] <a href=\"http://www.maxmind.com/app/ipv6\">http://www.maxmind.com/app/ipv6</a></li></ul>",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=VuFW0PkNS74",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "43-what-is-ipv6-and-why-does-my-website-i-need-i",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>On February 3rd, 2011 the world ran out of the IPv4 addresses that we know and love. Clearly the Internet has survived even though hardly anyone has deployed IPv4's successor, IPv6. Drop by to learn about what IPv6 is, why you should deploy it and some of the hurdles to deployment.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/DTGi8y1DMtg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/DTGi8y1DMtg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/DTGi8y1DMtg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 728,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        294,
        181
      ],
      "title": "46. HTSQL : a navigational query language for relational databases",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T02:15:17Z",
      "added": "2012-03-14T02:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=5jRLjGWWaHs",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "46-htsql-a-navigational-query-language-for-rel",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This poster will cover a description of the HTSQL query language (http://htsql.org). </p>",
      "thumbnail_url": "http://img.youtube.com/vi/5jRLjGWWaHs/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/5jRLjGWWaHs?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/5jRLjGWWaHs?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 727,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        402
      ],
      "title": "48. Advanced Parallel Primitives in SPM.Python for Data and Graph Analytics",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-14T02:15:17Z",
      "added": "2012-03-14T02:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=_CPNLY_Gf7s",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "48-advanced-parallel-primitives-in-spmpython-fo",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Traditional solutions for data and graph analytics tend to be highly fragmented, and take the form of stand-alone frameworks. In this poster session, we shall describe our approach that is centered around a suite of advanced parallel primitives embedded within SPM.Python. These primitives augment the serial Python language with concepts like parallel generators, emitters and exceptions.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/_CPNLY_Gf7s/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/_CPNLY_Gf7s?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/_CPNLY_Gf7s?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 705,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        390,
        391
      ],
      "title": "7. The Artemis Project: Promoting Computer Science to High School Girls",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:45:14Z",
      "added": "2012-03-13T03:45:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=67l4czkKsz8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "7-the-artemis-project-promoting-computer-scienc",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Artemis Project is a summer program to introduce high school girls to the problem-solving skills that are at the core of computer science. As coordinators, we found that there is a lot of undiscovered talent and enthusiasm for CS in the younger generation. Our poster is meant to encourage discussions on intuitive ways to introduce programming and interesting projects for novice programmers.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/67l4czkKsz8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/67l4czkKsz8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/67l4czkKsz8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 695,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        381
      ],
      "title": "8. BoolPy: Using Python for Symbolic Boolean Algebra Simplification",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:15:13Z",
      "added": "2012-03-13T03:15:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=FCiA6e44aOI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "8-boolpy-using-python-for-symbolic-boolean-alge",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>BoolPy is a Python module that iteratively simplifies Boolean Algebra expressions according to the Boolean Theorems. The purpose of this talk is twofold: (1) To present the details of an Object-Oriented solution to the symbolic computing problem and (2) to present the BoolPy module as a useful classroom tool for teaching Boolean Algebra in college-level mathematics and computer science courses.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/FCiA6e44aOI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/FCiA6e44aOI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/FCiA6e44aOI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 700,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        384,
        385
      ],
      "title": "9. Developing Humanitarian Packages with Sugar and Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:30:34Z",
      "added": "2012-03-13T03:30:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=uUEwEMMCZhE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "9-developing-humanitarian-packages-with-sugar-an",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>FOSS@RIT is an applied research lab at Rochester Institute of Technology focused on promoting free/open source software and open web technologies. The lab helped create a series of classes which have resulted in several educational games and tools written in Python for the Sugar desktop environment. Come learn more about our students' projects and how open source can be applied in the classroom.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/uUEwEMMCZhE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/uUEwEMMCZhE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/uUEwEMMCZhE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 715,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        364
      ],
      "title": "Building A Python-Based Search Engine",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:00:16Z",
      "added": "2012-03-13T16:00:16Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=cY7pE7vX6MU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "building-a-python-based-search-engine",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Search is an increasingly common request in all types of applications as the amount of data all of us deal with continues to grow. The technology/architecture behind search engines is wildly different from what\r\nmany developers expect. This talk will give a solid grounding in the fundamentals of providing search using Python to flesh out these concepts in a simple library.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/cY7pE7vX6MU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/cY7pE7vX6MU&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/cY7pE7vX6MU&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 958,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        422
      ],
      "title": "Deep Freeze: building better stand-alone apps with Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:26:45Z",
      "added": "2012-03-16T11:26:45Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=vP6j7VDpPrI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "deep-freeze-building-better-stand-alone-apps-wit",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>There's more to shipping a stand-alone python app than just running py2exe over your code.  Want to deploy automatic updates?  Want to be sure it runs on legacy platforms?  Want to add professional touches like code signing?  And want to do this all in a cross-platform manner?  This talk will show you the tools you can use to make your frozen apps better in a variety of small yet important ways.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/vP6j7VDpPrI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/vP6j7VDpPrI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/vP6j7VDpPrI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 719,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        97,
        377
      ],
      "title": "Diversity in practice: How the Boston Python User Group grew to 1700 people and over 15% women",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:15:17Z",
      "added": "2012-03-13T16:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=QrITN6GZDu4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "diversity-in-practice-how-the-boston-python-user",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>How do you bring more women into programming communities with long-term, measurable results? In this talk we'll analyze our successful effort, the Boston Python Workshop, which brought over 200 women into Boston's Python community this year. We'll talk about lessons learned running the workshop, the dramatic effect it has had on the local user group, and how to run a workshop in your city.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QrITN6GZDu4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QrITN6GZDu4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QrITN6GZDu4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 713,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        393
      ],
      "title": "Improving Documentation with \"Beginner's Mind\" (or: Fixing the Django Tutorial)",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T04:00:18Z",
      "added": "2012-03-13T04:00:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=euh9ZQi339o",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "improving-documentation-with-beginners-mind-o",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk evaluates a well-known free software tutorial (the official Django tutorial) from the perspective of a web development novice in order to point out omissions and common sticking points and suggest improvements. More generally, this talk is useful to anyone looking to improve their project's tutorials and other newcomer-targeted documentation by approaching them with \"beginner's mind\".</p>",
      "thumbnail_url": "http://img.youtube.com/vi/euh9ZQi339o/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/euh9ZQi339o&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/euh9ZQi339o&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 956,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Keynote: Guido Van Rossum",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:26:44Z",
      "added": "2012-03-16T11:26:44Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=EBRMq2Ioxsc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-guido-van-rossum",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/EBRMq2Ioxsc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/EBRMq2Ioxsc?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/EBRMq2Ioxsc?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 720,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        219
      ],
      "title": "More than just a pretty web framework, the Tornado IOLoop",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:15:18Z",
      "added": "2012-03-13T16:15:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3BYN3ouwkRA",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "more-than-just-a-pretty-web-framework-the-tornad",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Tornado, often thought of as a web development framework and toolset is built on top of a protocol-agnostic IOLoop, presenting an alternative to Twisted as a foundation for asynchronous application development in Python. This talk covers the Tornado IOLoop, its features and the process of writing drivers and applications using it.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/3BYN3ouwkRA/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3BYN3ouwkRA&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3BYN3ouwkRA&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 708,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        347
      ],
      "title": "Parsing Horrible Things with Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:45:15Z",
      "added": "2012-03-13T03:45:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tCUdeLIj4hE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "parsing-horrible-things-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>If you've ever wanted to get started with parsers, here's your chance for a ground-floor introduction. A harebrained spare-time project gives birth to a whirlwind journey from basic algorithms to Python libraries and, at last, to a parser for one of the craziest syntaxes out there: the MediaWiki grammar that drives Wikipedia.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tCUdeLIj4hE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tCUdeLIj4hE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tCUdeLIj4hE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 716,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        394
      ],
      "title": "Parsing sentences with the OTHER natural language tool: LinkGrammar",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:00:16Z",
      "added": "2012-03-13T16:00:16Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Wk8zAr0R9zQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "parsing-sentences-with-the-other-natural-language",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Many of you are probably familiar with NLTK, the wonderful Natural Language Toolkit for Python.  You may not be familiar with Linkgrammar, which is a sentence parsing system created at Carnegie Melon university.  Linkgrammar is quite robust and works \"out of the box\" in a way that NLTK does not for sentence parsing.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Wk8zAr0R9zQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Wk8zAr0R9zQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Wk8zAr0R9zQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 707,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        127
      ],
      "title": "Patterns for building large Pyramid applications",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:45:15Z",
      "added": "2012-03-13T03:45:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NUQMr5R3dlk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "patterns-for-building-large-pyramid-applications",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Pyramid is a very flexible framework, but when dealing with large projects and multiple developers it pays to establish a few ground rules and follow some conventions. In this talk we'll discuss some patterns for organizing and developing a large Pyramid application.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/NUQMr5R3dlk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NUQMr5R3dlk&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NUQMr5R3dlk&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 717,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        337
      ],
      "title": "Python, Linkers, and Virtual Memory",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:15:17Z",
      "added": "2012-03-13T16:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=twQKAoq2OPE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-linkers-and-virtual-memory",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Why does \u201ctop\u201d show that your Python process uses 110\u00a0MB of virtual memory but has a resident set size of 9\u00a0MB? Does it consume more memory to spawn several interpreters, or to run one Python and have it fork() further workers? What is an \u201cundefined symbol,\u201d anyway? Learn about how an operating system manages memory, loads shared libraries, and what this means for Python servers and applications.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/twQKAoq2OPE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/twQKAoq2OPE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/twQKAoq2OPE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 709,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Robot NAO",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T03:45:15Z",
      "added": "2012-03-13T03:45:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "CC BY-SA",
      "source_url": "https://www.youtube.com/watch?v=dJJDndQrsSw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "robot-nao",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/dJJDndQrsSw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/dJJDndQrsSw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/dJJDndQrsSw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 957,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        45
      ],
      "title": "Sketching a Better Product",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:26:45Z",
      "added": "2012-03-16T11:26:45Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Q0Q9K93bK-4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sketching-a-better-product",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>If writing is a means for organizing your thoughts, then sketching is a means for organizing your thoughts visually. Just as good writing requires drafts, good design requires sketches: low-investment, low-resolution braindumps. Learn how to use ugly sketching to iterate your way to a better product.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Q0Q9K93bK-4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Q0Q9K93bK-4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Q0Q9K93bK-4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 721,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Sunday Afternoon Lightning talks (90 minutes)",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:30:18Z",
      "added": "2012-03-13T16:30:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=5YQrFiWa50M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sunday-afternoon-lightning-talks-90-minutes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/5YQrFiWa50M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/5YQrFiWa50M&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/5YQrFiWa50M&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 954,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Sunday Morning Lightning talks",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-16T11:26:41Z",
      "added": "2012-03-16T11:26:41Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=VMIj6eB9baY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sunday-morning-lightning-talks",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/VMIj6eB9baY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/VMIj6eB9baY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/VMIj6eB9baY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 710,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        7
      ],
      "title": "Transifex: Beautiful Python app localization",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T04:00:18Z",
      "added": "2012-03-13T04:00:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=KOfB5WQb39g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "transifex-beautiful-python-app-localization",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Localization of Python apps used to be hard, but not any more. This talk will offer a short intro on software localization in Python and discuss today's best practices. It will present Transifex, a modern, Django-based SaaS, also referred to as 'The Github of translations', used by 2.000 open-source projects including Django, Mercurial, Fedora and Firefox.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/KOfB5WQb39g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/KOfB5WQb39g&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/KOfB5WQb39g&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 714,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        233
      ],
      "title": "web2py: ideas we stole and ideas we had",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T04:15:17Z",
      "added": "2012-03-13T04:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=M5IPlMe83yI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "web2py-ideas-we-stole-and-ideas-we-had",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this talk we will provide an overview of some of the web2py design decisions and its newest features. In particular we will discuss which design decisions were inspired by other frameworks (Django, Turbogears, Flask) and which were not and why.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/M5IPlMe83yI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/M5IPlMe83yI&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/M5IPlMe83yI&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 718,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        95
      ],
      "title": "What's new and interesting in standard library",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T16:15:17Z",
      "added": "2012-03-13T16:15:17Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=2gha47uSk5c",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "whats-new-and-interesting-in-standard-library",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk distills some intereting stuff from What's new document from 2.7, 3.2 and upcoming 3.3 release. Look out for those new arguments to your favorite methods, functions add the wow! factor to your code. Heard of @lru_cache?\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/2gha47uSk5c/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/2gha47uSk5c&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/2gha47uSk5c&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 712,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        232
      ],
      "title": "What's New in Python on Windows",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T04:00:18Z",
      "added": "2012-03-13T04:00:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=lJL2asANiyM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "whats-new-in-python-on-windows",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>With nearly 1.5 million downloads per month, the CPython installers for Windows account for a huge amount of the traffic through python.org, and they're the most common way for Windows users to obtain Python. Take a look at what's going on with Python on Windows and see what the road ahead looks like for Python 3.3.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/lJL2asANiyM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/lJL2asANiyM&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/lJL2asANiyM&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 711,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        392
      ],
      "title": "Writing GIMP Plug-ins in Python",
      "quality_notes": "",
      "recorded": "2012-03-11",
      "state": 1,
      "updated": "2012-03-13T04:00:18Z",
      "added": "2012-03-13T04:00:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=YHXX3KuB23Q",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "writing-gimp-plug-ins-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Learn how to write Python plug-ins for GIMP, the GNU Image Manipulation Program. With PyGIMP, you can automate simple image processing tasks in just a few lines of PyGIMP, develop elaborate plug-ins that do low-level pixel manipulation, or anything in between.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/YHXX3KuB23Q/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/YHXX3KuB23Q&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/YHXX3KuB23Q&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 887,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        418
      ],
      "title": "A Gentle Introduction to GIS",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-15T21:45:18Z",
      "added": "2012-03-15T21:45:18Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=LddeJ06JoXE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "a-gentle-introduction-to-gis",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Datums! Coordinate systems! Map projections! Topologies! Spatial applications are a nebulous, daunting concept to most Pythonistas. This talk is a gentle introduction into the concepts, terminology and tools to demystify the world of the world.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/LddeJ06JoXE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/LddeJ06JoXE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/LddeJ06JoXE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 704,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        389
      ],
      "title": "Advanced Celery",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-13T03:45:12Z",
      "added": "2012-03-13T03:45:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=gpKMwPoldak",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "advanced-celery",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk will delve deep into advanced aspects of the Celery task queue and\r\necosystem.  Previous experience with task queues and message oriented\r\nmiddleware is beneficial.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/gpKMwPoldak/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/gpKMwPoldak&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/gpKMwPoldak&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 669,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        224
      ],
      "title": "Building a Kinect game with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=BoMQqW0lxVE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "building-a-kinect-game-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk will show you how to develop a game using Kinect from Python.  I'll start w/ an introduction to the Kinect API including skeleton tracking, normal video, depth video, and audio APIs including speech recognition.  I\u2019ll then show how the Kinect APIs can be incorporated into a game using PyGame.  After the talk you\u2019ll be able to start developing your own Python based Kinect games!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/BoMQqW0lxVE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/BoMQqW0lxVE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/BoMQqW0lxVE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 683,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        186
      ],
      "title": "Building a Robot that Can Play Angry Birds on a Smartphone, (or Robots are the Future of Testing)",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NkUTLRZBWLM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "building-a-robot-that-can-play-angry-birds-on-a-s",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Can your robot play Angry Birds? On an iPhone? Mine can. I call it \"BitbeamBot\". It started as an art project, but it has a much more serious practical application: mobile web testing. To trust that your mobile app truly works, you need an end-to-end test on the actual device. BitbeamBot is an Arduino-powered open-source hardware CNC robot that can test any application on any mobile device. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/NkUTLRZBWLM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NkUTLRZBWLM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NkUTLRZBWLM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 679,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        36,
        37
      ],
      "title": "Cache Rules Everything Around Me",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=fekA2mRGTTE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "cache-rules-everything-around-me",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk aims to briefly introduce the core concepts of caching and covers the best practices of implementing them, using a small variety of python web frameworks (Flask, Django) for example code.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/fekA2mRGTTE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/fekA2mRGTTE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/fekA2mRGTTE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 668,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        362
      ],
      "title": "Coroutines, event loops, and the history of Python generators",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=b7R3-_ViNxk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "coroutines-event-loops-and-the-history-of-pytho",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk traces lightweight concurrency from Python 2.2's generators, which enabled semi-coroutines as a mechanism for scheduling \"weightless\" threads; to PEP 342, which created true coroutines, and hence made event-driven programming easier; to 3rd party libraries built around coroutines, from older GTasklet and peak.events to the current Greenlet/gevent and Twisted Reactor.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/b7R3-_ViNxk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/b7R3-_ViNxk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/b7R3-_ViNxk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 682,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        371
      ],
      "title": "Cross-Compiling Python & C Extensions for Embedded Systems",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=nhr-YErfW8k",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "cross-compiling-python-c-extensions-for-embedde",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Cross-compiling is not a use case directly supported by the Python build and extension system. This talk will discuss the process of building python for your embedded platform, and the basics of getting C extensions compiled and running. It will focus on Linux so that the build host and the build target are the same.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/nhr-YErfW8k/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/nhr-YErfW8k?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/nhr-YErfW8k?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 687,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        374
      ],
      "title": "Designing Embedded Systems with Linux and Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:35Z",
      "added": "2012-03-12T20:00:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=WZoeqnsY9AY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "designing-embedded-systems-with-linux-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The continual decrease in the cost of computer hardware is allowing more embedded systems to be built with Linux and Python, instead of the traditional approach of a real-time operating system and C. This talk reviews the differences between those approaches and describes problems, solutions, and tools that can be used when building embedded systems with Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/WZoeqnsY9AY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/WZoeqnsY9AY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/WZoeqnsY9AY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 698,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        383
      ],
      "title": "Django Form Processing Deep Dive ",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-13T03:30:23Z",
      "added": "2012-03-13T03:30:23Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Wh9a0obtQUQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "django-form-processing-deep-dive",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Django Form processing often takes a back seat to flashier, more visible parts of the framework. But Django forms, fully leveraged, can help developers be more productive and write more cohesive code. This talk will dive deep into the stock Django forms package, as well as discuss a strategy for abstracting validation for forms, and the use of unit and integration tests with forms.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Wh9a0obtQUQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Wh9a0obtQUQ&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Wh9a0obtQUQ&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 697,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        382
      ],
      "title": "Django Templating: More Than Just Blocks",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-13T03:30:23Z",
      "added": "2012-03-13T03:30:23Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ahM4GBZ-6qg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "django-templating-more-than-just-blocks",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Django's template language is designed to strike a balance between power and ease of use; learn how to use this balance to create awesome looking websites. This talk will cover the basics and best practices of Django templating, from custom tag and filter creation, to the finer points of template rendering and loading, and even to replacing the default templating engine itself.  </p>",
      "thumbnail_url": "http://img.youtube.com/vi/ahM4GBZ-6qg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ahM4GBZ-6qg&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ahM4GBZ-6qg&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 664,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        337
      ],
      "title": "Flexing SQLAlchemy's Relational Power",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=399c-ycBvo4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "flexing-sqlalchemys-relational-power",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>How do you take the big step from casual SQLAlchemy user, who treats your database as a mysterious object store, to advanced power user, who optimizes critical queries, plans indexing and migrations, and generates efficient reports? This talk will teach you how databases think; why humanity invented the Relational Algebra; and how SQLAlchemy grants you access to relational power.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/399c-ycBvo4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/399c-ycBvo4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/399c-ycBvo4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 671,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        363
      ],
      "title": "Getting the Most Out of Python Imports",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=kdZuUIj4lMo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "getting-the-most-out-of-python-imports",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>To really take advantage of Python you must understand how imports work and how to use them effectively.  In this talk we'll discuss both of these.  After a short introduction to imports, we'll dive right in and look at how customizing import behavior can make all your wildest dreams come true.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/kdZuUIj4lMo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/kdZuUIj4lMo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/kdZuUIj4lMo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 665,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        89
      ],
      "title": "Hand Coded Applications with SQLAlchemy",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=E09qigk_hnY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "hand-coded-applications-with-sqlalchemy",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>SQLAlchemy is the object relational mapper and database toolkit for Python, first introduced in 2005. In this talk I'll describe why SQLAlchemy has always been called a \"toolkit\", detailing the software construction mindset for which SQLAlchemy was designed to be used with - what I am currently referring to as the \"Hand Coded\" approach. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/E09qigk_hnY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/E09qigk_hnY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/E09qigk_hnY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 689,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        376
      ],
      "title": "How CherryPy supports Python 2 and 3",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:35Z",
      "added": "2012-03-12T20:00:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=nvkCqFLtcJI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-cherrypy-supports-python-2-and-3",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>CherryPy was the first web framework to be made available for use with Python 3, and we tried several approaches to support both Python 2 and 3 before settling on one. Learn about the ups and the downs of each approach, and ways you can make your own porting project easier.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/nvkCqFLtcJI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/nvkCqFLtcJI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/nvkCqFLtcJI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 662,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        359
      ],
      "title": "How the PyPy JIT works",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NIcijUt-HlE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-the-pypy-jit-works",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Python community is abuzz about the major speed gains PyPy can offer pure Python code. But how does PyPy JIT actually work? This talk will discuss how the PyPy JIT is implemented. It will include descriptions of the tracing, optimization, and assembly generation phases. I will demonstrate each step with a example loop.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/NIcijUt-HlE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NIcijUt-HlE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NIcijUt-HlE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 659,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Keynote: David Beazley",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=l_HBRhcgeuQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-david-beazley",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/l_HBRhcgeuQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/l_HBRhcgeuQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/l_HBRhcgeuQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 688,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        375
      ],
      "title": "Mailman 3",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:35Z",
      "added": "2012-03-12T20:00:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=dX3DRdFKW_E",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "mailman-3",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Mailman 3 has been in development for several years.  This is an evolution of the ever popular mailing list management system that runs thousands of mailing lists around the world.  This talk describes how the code has been modernized and how the architectural deficiencies of Mailman 2 have been addressed using REST and other technologies.  This is a spinoff from the AOSA chapter on Mailman 3.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/dX3DRdFKW_E/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/dX3DRdFKW_E?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/dX3DRdFKW_E?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 667,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        199
      ],
      "title": "Making Jython Faster and Better",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=y_cXzaymXm0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-jython-faster-and-better",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>As a dynamic language, Python is difficult to optimize. In addition, these dynamic features make using Python code from Java currently too complex. However, Java 7 adds the invokedynamic bytecode and corresponding library support, making it possible to finally address these problems in Jython. This talk will describe work in progress to make Jython faster and better (improving Java integration).</p>",
      "thumbnail_url": "http://img.youtube.com/vi/y_cXzaymXm0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/y_cXzaymXm0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/y_cXzaymXm0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 672,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        38
      ],
      "title": "Making maps with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=RBOScqRGHZA",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-maps-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python makes it easy to store, query, and transform geodata. We will run through a handful of useful GIS libraries and patterns that let you do magical things with your maps. If you want to make maps that are more interactive and more interesting, this talk is for you.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/RBOScqRGHZA/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/RBOScqRGHZA?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/RBOScqRGHZA?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 674,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        211
      ],
      "title": "Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=QPgqfnKG_T4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "militarizing-your-backyard-with-python-computer",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Has your garden been ravaged by the marauding squirrel hordes? Has your bird feeder been pillaged? Tired of shaking your fist at the neighbor children? Learn how to use Python to tap into computer vision libraries and build an automated sentry water cannon capable of soaking intruders.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QPgqfnKG_T4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QPgqfnKG_T4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QPgqfnKG_T4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 681,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        370
      ],
      "title": "Polyglot Programming with Python: Python/Scala Interop",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=fWONoZvTi80",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "polyglot-programming-with-python-pythonscala-in",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>I won't just demonstrate how to use projects that bridge programming languages, I'll walk through the lower-level code that allows inter-language communication to happen.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/fWONoZvTi80/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/fWONoZvTi80?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/fWONoZvTi80?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 948,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        140
      ],
      "title": "Pragmatic Unicode, or, How do I stop the pain?",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:26:35Z",
      "added": "2012-03-16T11:26:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=sgHbC6udIqc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pragmatic-unicode-or-how-do-i-stop-the-pain",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python has great Unicode support, but it's still your responsibility to handle it properly.  I'll do a quick overview of what Unicode is, but only enough to get your program working properly.  I'll describe strategies to make your code work, and keep it working, without getting too far afield in Unicode la-la-land.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/sgHbC6udIqc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/sgHbC6udIqc?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/sgHbC6udIqc?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 666,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        361
      ],
      "title": "Project Gado: Building an Open Archival Scanning Robot Using Python and Arduino",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=1CjX385y3e4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "project-gado-building-an-open-archival-scanning",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Project Gado is an initiative which aims to create an open-source archival scanning robot which small archives can purchase for $500 and use to autonomously scan their photographic collections. This talk presents the Gado 2, a prototype scanning robot built around Python and Arduino, and shares lessons learned from using Python as the primary language in a large-scale archival scanning project. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/1CjX385y3e4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/1CjX385y3e4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/1CjX385y3e4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 670,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        332
      ],
      "title": "Python and HDF5 - Fast Storage for Large Data",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:32Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hnhN2_TpY8g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-and-hdf5-fast-storage-for-large-data",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The presentation introduces the possibilities to\r\nuse HDF5 (Hierarchical Data Format) from Python.\r\nHDF5 is one of the fastest ways to store large\r\namounts of numerical data.\r\nThe talk is for scientist who would like\r\nto store their measured or calculated data as well\r\nas for programmers who are interested in non-relational\r\ndata storage. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/hnhN2_TpY8g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hnhN2_TpY8g?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hnhN2_TpY8g?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 676,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        367,
        366
      ],
      "title": "Python for data lovers: explore it, analyze it, map it",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=GxyfYEe8MiQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-for-data-lovers-explore-it-analyze-it-m",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Exploring and analyzing data can be daunting and time-consuming, even for data lovers. Python can make the process fun and exciting. We will present techniques of data analysis, along with python tools that help you explore and map data. Our talk includes examples that show how python libraries such as csvkit, matplotlib, scipy, networkx and pysal can help you dig into and make sense of your data.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/GxyfYEe8MiQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/GxyfYEe8MiQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/GxyfYEe8MiQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 663,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        360
      ],
      "title": "Python for makers",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=wslWYg0CTkY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-for-makers",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Digital fabrication is the art of translating digital designs into physical objects. Using personal machines that are controlled via software, a live demonstration of CNC milling and 3D printing will also be performed. This talk is a walkthrough from 3D models to machine motion, that shows how we can use Python to write GCODE generators that create endless form.  </p>",
      "thumbnail_url": "http://img.youtube.com/vi/wslWYg0CTkY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/wslWYg0CTkY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/wslWYg0CTkY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 660,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        358
      ],
      "title": "Python Meets the Arduino",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=54XwSUC8klI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-meets-the-arduino",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. Python is our favorate programming language that allows you to integrate systems more effectively. Learn how to use Python to communicate with an Arduino and interact with sensors, solenoids and motors.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/54XwSUC8klI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/54XwSUC8klI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/54XwSUC8klI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 658,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Python Software Foundation Chairman's Address",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:28:49Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=6wZoBbE-rOo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-software-foundation-chairmans-address",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/X6807rcObkk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/X6807rcObkk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/X6807rcObkk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 673,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        364
      ],
      "title": "RESTful APIs With Tastypie",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:32Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Zv26xHYlc8s",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "restful-apis-with-tastypie",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Providing full-featured REST APIs is an increasingly popular request. Tastypie allows you to easily implement a customizable REST API for your Python or Django applications.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Zv26xHYlc8s/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Zv26xHYlc8s?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Zv26xHYlc8s?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 690,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Saturday Evening Lightning talks (60 minutes)",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:30:25Z",
      "added": "2012-03-12T20:00:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=N4zdWLuSbV0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "saturday-evening-lightning-talks-60-minutes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/eLuscpu4xA0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/eLuscpu4xA0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/eLuscpu4xA0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 657,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Saturday Morning Lightning talks",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=H841U6RhrDU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "saturday-morning-lightning-talks",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/H841U6RhrDU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/H841U6RhrDU?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/H841U6RhrDU?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 678,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        200
      ],
      "title": "Sharing is Caring: Posting to the Python Package Index",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bwwf_HbEJQM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sharing-is-caring-posting-to-the-python-package",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Due to its robust namespacing, Python uniquely equips developers to write and distribute reusable code. The Python community has a tool for this: the Python Package Index. PyPI is a massive repository of code, and in this talk you'll learn how to take code that you've written it and register and distribute it for use by others.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bwwf_HbEJQM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bwwf_HbEJQM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bwwf_HbEJQM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 680,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        369
      ],
      "title": "Spatial data and web mapping with Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qmgh14LUOjQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "spatial-data-and-web-mapping-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Spatial data are often seen as opaque to most developers, and while dealing with them does require a shift in approach from the data types we most regularly handle, they needn\u2019t be the domain of specialists. High-quality Python libraries and Python-based applications exist for operating on and transforming spatial data, and for creating visualizations, including maps for presentation on the web.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qmgh14LUOjQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qmgh14LUOjQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qmgh14LUOjQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 947,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        421
      ],
      "title": "Storing, manipulating and visualizing timeseries using open source packages in Python",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:26:34Z",
      "added": "2012-03-16T11:26:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qTwvObrRGdY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "storing-manipulating-and-visualizing-timeseries",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Analyzing, storing and visualizing time-series efficiently are recurring though difficult tasks in various aspects of scientific data analysis such as meteorological forecasting, financial modeling, ... In this talk we will explore the current Python ecosystem for doing this effectively, comparing options, using only open source packages that are mature yet still under active development.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qTwvObrRGdY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qTwvObrRGdY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qTwvObrRGdY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 675,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        365
      ],
      "title": "Storm: the Hadoop of Realtime Stream Processing",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Ycvg0PCQ-sM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "storm-the-hadoop-of-realtime-stream-processing",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Twitter's new scalable, fault-tolerant, and simple(ish) stream programming system... with Python!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Ycvg0PCQ-sM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Ycvg0PCQ-sM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Ycvg0PCQ-sM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 699,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        35
      ],
      "title": "Testing and Django",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-13T03:30:29Z",
      "added": "2012-03-13T03:30:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ickNQcNXiS4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "testing-and-django",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A deep dive into writing tests with Django, covering Django's custom test-suite-runner and the testing utilities in Django, what all they actually do, how you should and shouldn't use them (and some you shouldn't use at all!). Also, guidelines for writing good tests (with or without Django), and my least favorite things about testing in Django (and how I'd like to fix them).</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ickNQcNXiS4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ickNQcNXiS4&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ickNQcNXiS4&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 684,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        372
      ],
      "title": "The Email Package: Past, Present, and Future",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=C9K8DOe1zWw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-email-package-past-present-and-future",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The email package in the Python Standard library has had a somewhat rocky transition into the Python3 era, and still doesn't handle non-ASCII easily.  That is about to change. This talk will compare how things worked in Python2 (the past), how things work now (in Python3.2), and how things will work much better in the future (hopefully Python3.3).\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/C9K8DOe1zWw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/C9K8DOe1zWw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/C9K8DOe1zWw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 945,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        420
      ],
      "title": "The Journey to Give Every Scientist a Supercomputer",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:26:33Z",
      "added": "2012-03-16T11:26:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=47NSfuuuMfs",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-journey-to-give-every-scientist-a-supercomput",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The recent cloud buzz has hugely benefited Python web devs. But, for Python's formidable scientific community, the cloud has been less ambitious--until now.  PiCloud is a Python-based cloud platform that tackles a noble cause: giving every scientist in the world instant access to a supercomputer. The talk will cover how Python inspired the design of PiCloud, which has now processed over 100M jobs.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/47NSfuuuMfs/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/47NSfuuuMfs?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/47NSfuuuMfs?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 686,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        373
      ],
      "title": "The Pyed Piper: A Modern Python Alternative to awk, sed and Other Unix Text Manipulation Utilities ",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:35Z",
      "added": "2012-03-12T20:00:35Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3UHE-zD1r_M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-pyed-piper-a-modern-python-alternative-to-aw",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>\"The Pyed Piper\", or pyp, is a linux command line text manipulation tool similar to awk or sed, but which uses standard python string and list methods as well as custom functions evolved to generate fast results in an intense production environment.\r\n\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/3UHE-zD1r_M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3UHE-zD1r_M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3UHE-zD1r_M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 677,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        368
      ],
      "title": "Using fabric to standardize the development process",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:33Z",
      "added": "2012-03-12T20:00:33Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bTXert2uRco",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "using-fabric-to-standardize-the-development-proce",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>By ensuring consistency and repeatability in setting up the development environments of a team of developers, errors can be avoided (by automating repetitive tasks). It also helps by lowering the entry barrier for new developers, and letting existing developers focus on development tasks without having to worry about infrastructure or process issues.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bTXert2uRco/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bTXert2uRco?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bTXert2uRco?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 703,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        52
      ],
      "title": "Web Server Bottlenecks And Performance Tuning",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-13T03:45:11Z",
      "added": "2012-03-13T03:45:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Bt2HStzaBzE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "web-server-bottlenecks-and-performance-tuning",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>New Python web developers seem to love running benchmarks on WSGI servers. Reality is that they often have no idea what they are doing or what to look at. This talk will look at a range of factors which can influence the performance of your Python web application. This includes the impact of using threads vs processes, number of processors, memory available, the GIL and slow HTTP clients.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Bt2HStzaBzE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Bt2HStzaBzE&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Bt2HStzaBzE&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 685,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        144
      ],
      "title": "What Python can learn from Java",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:34Z",
      "added": "2012-03-12T20:00:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=z1RQMm37Xmw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "what-python-can-learn-from-java",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Java is in some ways a bogeyman to the Python community -- the language that parents scare their children with, the Cobol of the 21st century.  But if we look past the cesspool of JEE it turns out that Java has quietly become an excellent systems environment, one that is still in many ways ahead of its time.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/z1RQMm37Xmw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/z1RQMm37Xmw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/z1RQMm37Xmw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 946,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        305
      ],
      "title": "What you need to know about datetimes",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-16T11:26:34Z",
      "added": "2012-03-16T11:26:34Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=LnVkLXRIbIg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "what-you-need-to-know-about-datetimes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>`time`, `datetime`, and `calendar` from the standard library are a bit messy. Find out what to use where and how (particularly when you have users in many timezones), and what extra modules you might want to look into.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/LnVkLXRIbIg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/LnVkLXRIbIg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/LnVkLXRIbIg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 661,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        28,
        334,
        104
      ],
      "title": "Why PyPy by example",
      "quality_notes": "",
      "recorded": "2012-03-10",
      "state": 1,
      "updated": "2012-03-12T20:00:31Z",
      "added": "2012-03-12T20:00:31Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=P5ad6NpjR3M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "why-pypy-by-example",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>One of the goals of PyPy is to make existing Python code faster, however an\r\neven broader goal was to make it possible to write things in Python that\r\nprevious would needed to be written in C or other low-level language.\r\nThis talk will show examples of this, and describe how they represent\r\nthe tremendous progress PyPy has made, and what it means for people looking\r\nto use PyPy.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/P5ad6NpjR3M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/P5ad6NpjR3M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/P5ad6NpjR3M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 628,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        336
      ],
      "title": "A Noob Speaks to Noobs: Your First Site in the Cloud",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hyzPYaAmVOc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "a-noob-speaks-to-noobs-your-first-site-in-the-cl",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A developer talks about her lessons learned with setting up her first server, and offers advice to others about to tread that path.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hyzPYaAmVOc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hyzPYaAmVOc?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hyzPYaAmVOc?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 654,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        227
      ],
      "title": "A resume-based WSGI Load Balancer",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tYW52SLy_w0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "a-resume-based-wsgi-load-balancer",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>When a web application is large, it's a good idea to send different kinds of requests to different servers to reduce the content corpus managed by each server.  A decentralized load balancing-based approach is presented in which each application server keeps track of what it's good at and presents its resume to load balancers, which use application server resumes to distribute load.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tYW52SLy_w0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tYW52SLy_w0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tYW52SLy_w0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 638,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        40
      ],
      "title": "Advanced Security Topics",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=JOXwclgvXB0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "advanced-security-topics",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>If your Python application has users, you should be worried about security. This talk will cover advanced material, highlighting common mistakes. Topics will include hashing and salts, timing attacks, serialization, and much more. Expect eye opening demos, and an urge to go fix your code right away.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/JOXwclgvXB0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/JOXwclgvXB0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/JOXwclgvXB0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 643,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        351
      ],
      "title": "Apache Cassandra and Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=188mXjwdkak",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "apache-cassandra-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Using Apache Cassandra from Python is easy to do.  This talk will cover setting up and using a local development instance of Cassandra from Python.  It will cover using the low level thrift interface, as well as using the higher level pycassa library.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/188mXjwdkak/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/188mXjwdkak?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/188mXjwdkak?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 639,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        348
      ],
      "title": "Build reliable, traceable, distributed systems with ZeroMQ",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9G6-GksU7Ko",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "build-reliable-traceable-distributed-systems-wi",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>We will show how to build simple yet powerful RPC code with ZeroMQ, with very few (if any!) modification to existing code. We will build fan-in and fan-out topologies with ZeroMQ special socket types to implement PUB/SUB patterns and scale up job-processing tasks. Thanks to introspection, the resulting services will be self-documented. Finally, we will show how to implement distributed tracing.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9G6-GksU7Ko/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9G6-GksU7Ko?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9G6-GksU7Ko?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 653,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        216
      ],
      "title": "Certainty in an Uncertain World: Gaining Confidence through Security Testing",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=TmuEDxX1FDQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "certainty-in-an-uncertain-world-gaining-confiden",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Nobody thinks you have to be a performance expert to write performance tests- why assume that you have to be a security expert to write security tests? During this presentation I'll show you how to use fuzzers, attack tools, and other simple techniques to help protect your users, improve the strength of your existing tests, and gain confidence in the security of your code. There will be demos!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/TmuEDxX1FDQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/TmuEDxX1FDQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/TmuEDxX1FDQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 641,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        238
      ],
      "title": "Code Generation in Python: Dismantling Jinja",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=jXlR0Icvvh8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "code-generation-in-python-dismantling-jinja",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>For many DSLs such as templating languages it's important to use code generation to achieve acceptable performance in Python.  The current version of Jinja went through many different iterations to end up where it is currently.  This talk walks through the design of Jinja2's compiler infrastructure and why it works the way it works and how one can use newer Python features for better results.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/jXlR0Icvvh8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/jXlR0Icvvh8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/jXlR0Icvvh8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 637,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        45
      ],
      "title": "Data, Design, Meaning",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=vfYul2E56fo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "data-design-meaning",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The ultimate goal of data visualization is to tell a story and supply meaning. There are tools and science that can inform your choice of data to present and how best to present it. We reflexively evaluate data and fit it into a narrative which aids decisionmaking; learn how to take advantage of this tendency in order to deliver meaning, not just numbers and charts.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/vfYul2E56fo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/vfYul2E56fo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/vfYul2E56fo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 883,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        416
      ],
      "title": "Decorators and Context Managers",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:30:13Z",
      "added": "2012-03-15T21:30:13Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=cSbD5SKwak0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "decorators-and-context-managers",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Learn how decorators and context managers work, see several popular examples, and get a brief intro to writing your own.  Decorators wrap your functions to easily add more functionality.  Context managers use the 'with' statement to make indented blocks magical.  Both are very powerful parts of the python language; come learn how to use them in your code.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/cSbD5SKwak0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/cSbD5SKwak0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/cSbD5SKwak0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 878,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        415
      ],
      "title": "Extracting musical information from sound",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:15:09Z",
      "added": "2012-03-15T21:15:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bGWytn-Ff9E",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "extracting-musical-information-from-sound",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>[audio missing from first 3 min] Music Information Retrieval technology has gotten good enough that you extract musical metadata from your sound files with some degree of accuracy. Find out how to use Python (along with third-party APIs) to determine everything from the key/tempo of a song to the pitch/timbre of individual notes. Then we'll do some amusing analysis of popular tunes.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bGWytn-Ff9E/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bGWytn-Ff9E&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bGWytn-Ff9E&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 646,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        352
      ],
      "title": "Fake It Til You Make It: Unit Testing Patterns With Mocks and Fakes",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hvPYuqzTPIk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "fake-it-til-you-make-it-unit-testing-patterns-wi",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this talk, aimed at intermediate Pythonistas, we'll have a look at some common, simple patterns in code, and the testing patterns that go with them. We'll also discover what makes some code more testable than others, and how mocks and fakes can help isolate the code to be tested (and why you want to do that). Finally, we'll touch on some tools to help make writing and running tests easier.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hvPYuqzTPIk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hvPYuqzTPIk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hvPYuqzTPIk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 631,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        225
      ],
      "title": "Fast Test, Slow Test",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=RAxiiRPHS9k",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "fast-test-slow-test",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Most unit tests aren't and their authors suffer for it. What is a unit test, really? How can writing them prevent classic testing problems? If you do write them, what trade-offs are you implicitly making?</p>",
      "thumbnail_url": "http://img.youtube.com/vi/RAxiiRPHS9k/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/RAxiiRPHS9k?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/RAxiiRPHS9k?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 627,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        226
      ],
      "title": "Graph Processing in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Mv3xgBQJPaE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "graph-processing-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Graphs are everywhere - from your distributed source code control to Twitter analytics. This session presents a set of three problems and shows how they can be decomposed into operations on graphs, and then demonstrates solutions using the various graph libraries available for (or accessible to) Python. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/Mv3xgBQJPaE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Mv3xgBQJPaE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Mv3xgBQJPaE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 633,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        346
      ],
      "title": "How to make your websites more accessible",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=jOu0D9ttCFI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-to-make-your-websites-more-accessible",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Is your website accessible? Have you tested it? What does it even mean for a website to be accessible?  In this talk we'll show some of the most common problems disabled users have and demonstrate how to fix them.  I'll also introduce you to some tools that are written in Python to help you determine how accessible your site is.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/jOu0D9ttCFI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/jOu0D9ttCFI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/jOu0D9ttCFI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 882,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        363
      ],
      "title": "Interfaces and Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:30:11Z",
      "added": "2012-03-15T21:30:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=4-TwdBuTR1A",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "interfaces-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In 2.6, Python introduced the Abstract Base Classes.  Before that we had \"protocols\" (and we still do).  In this talk we'll look at how the general concept of interfaces fits into today's Python.  We'll also look at some of the alternate proposals of the past, some of the controversies around ABCs, and the direction interfaces might go in the future.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/4-TwdBuTR1A/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/4-TwdBuTR1A&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/4-TwdBuTR1A&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 624,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Introduction and Welcome",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=yflKOoAohEk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-and-welcome",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/yflKOoAohEk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/yflKOoAohEk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/yflKOoAohEk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 877,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        200
      ],
      "title": "Introduction to Metaclasses",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:15:08Z",
      "added": "2012-03-15T21:15:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ANhTacigaf8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-metaclasses",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python's metaclasses grant the Python OOP ecosystem all the power of more complex object inheritance systems in other languages, while retaining for most uses the simplicity of the straightforward class structures most developers learn when being introduced to object-oriented programming. This talk is an explanation of metaclasses: first, what they are, and second, how to use them.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ANhTacigaf8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ANhTacigaf8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ANhTacigaf8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 644,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        76
      ],
      "title": "Introduction to PDB",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=vfPtGsSJldg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-pdb",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>PDB is an interactive debugging environment for Python programs. It allows you to pause your program, look at the values of variables, and watch program execution step-by-step, so you can understand what your program is actually doing, as opposed to what you think it's doing. This talk will show novice and intermediate Python\r\nusers how to use PDB to troubleshoot existing code.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/vfPtGsSJldg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/vfPtGsSJldg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/vfPtGsSJldg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 656,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        357
      ],
      "title": "Introspecting Running Python Processes",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=YdnBK5yO4zU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introspecting-running-python-processes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Understanding the internal state of a running system can be vital to maintaining a high performance, stable system, but conventional approaches such as logging and error handling only expose so much. This talk will touch on how to instrument Python programs in order to observe the state of the system, measure performance, and identify ongoing problems.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/YdnBK5yO4zU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/YdnBK5yO4zU?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/YdnBK5yO4zU?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 640,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        330,
        329,
        331,
        349
      ],
      "title": "IPython: Python at your fingertips",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=26wgEsg9Mcc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "ipython-python-at-your-fingertips",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>IPython is widely used in the scientific community, but its various tools can be used in any context.  IPython gets you as close as possible to the Python language, with an array of tools for productive work: at the terminal, in GUIs, through a web browser, and in high-level parallel computing.\r\n\r\nThis talk will explain the design of IPython and provide short, hands-on demos of its main features.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/26wgEsg9Mcc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/26wgEsg9Mcc?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/26wgEsg9Mcc?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 626,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Keynote: Paul Graham, YCombinator",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=R9ITLdmfdLI",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-paul-graham-ycombinator",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/R9ITLdmfdLI/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/R9ITLdmfdLI?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/R9ITLdmfdLI?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 625,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        341
      ],
      "title": "Keynote: Stormy Peters, Mozilla Corporation",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=KUpIFhNW89A",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "keynote-stormy-peters-mozilla-corporation",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p></p>",
      "thumbnail_url": "http://img.youtube.com/vi/KUpIFhNW89A/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/KUpIFhNW89A?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/KUpIFhNW89A?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 647,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        353
      ],
      "title": "Make Sure Your Programs Crash",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=OBbvj0WWT-g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "make-sure-your-programs-crash",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>With Python, segmentation faults and the like simply don't happen -- programs do not crash. However, the world is a messy, chaotic place. What happens when your programs crash? I will talk about how to make sure that your application survives crashes, reboots and other nasty problems.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/OBbvj0WWT-g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/OBbvj0WWT-g?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/OBbvj0WWT-g?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 651,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        355
      ],
      "title": "Non-Profit Centers of FLOSS Development",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:29Z",
      "added": "2012-03-12T20:00:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9q8LTZSvpr8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "non-profit-centers-of-floss-development",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Free, Libre & Open Source Software (FLOSS) began as a not-for-profit endeavor. FLOSS licenses permit commercial & non-commercial activity, but the heart of FLOSS remains in the not-for-profit space.  Kuhn will discuss advantages of non-profit structure and how non-profits facilitate neutral territory.  Kuhn will also present options for projects that seek to operate officially as a non-profit org.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9q8LTZSvpr8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9q8LTZSvpr8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9q8LTZSvpr8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 696,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        273
      ],
      "title": "pandas: Powerful data analysis tools for Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-13T03:30:09Z",
      "added": "2012-03-13T03:30:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qbYYamU42Sw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pandas-powerful-data-analysis-tools-for-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>pandas is a Python library providing fast, expressive data structures for working with structured or relational data sets. In addition to being used for general purpose data manipulation and data analysis, it has also been designed to enable Python to become a competitive statistical computing platform. In this talk, I will discuss the library's features and show a variety of topical examples.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qbYYamU42Sw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qbYYamU42Sw&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qbYYamU42Sw&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 630,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        343,
        342
      ],
      "title": "PBS KIDS: Building a login system for kids and teens in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=-Mx1JVTFOBY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pbs-kids-building-a-login-system-for-kids-and-te",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Our challenge was to create a login system for little people who might barely read, maybe no email, perhaps no home computer. And we had to watch out for privacy laws - especially tough for minors. But these kids want to play games, write stories, and create online avatars to share and compete against their buddies.  Listen to how we developed the PBS KIDS login and moderation system in Django.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/-Mx1JVTFOBY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/-Mx1JVTFOBY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/-Mx1JVTFOBY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 650,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        113
      ],
      "title": "Permission or Forgiveness?",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:29Z",
      "added": "2012-03-12T20:00:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=AZDWveIdqjY",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "permission-or-forgiveness",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Grace Murray Hopper's famous motto, \"It's easier to ask forgiveness than permission\", has many useful applications -- in Python, in concurrency, in networking, as well of course as in real life.  However, it's not universally valid.  This talk explores both useful and damaging applications of this principle.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/AZDWveIdqjY/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/AZDWveIdqjY?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/AZDWveIdqjY?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 636,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        189
      ],
      "title": "Practical Machine Learning in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=__s45TTXxps",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "practical-machine-learning-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>There are a plethora of options when it comes to deciding how to add a machine learning component to your python application.  In this talk, I'll discuss why python as a language is well-suited to solving these particular problems, the tradeoffs of different machine learning solutions for python applications, and some tricks you can use to get the most out of whatever package you decide to use.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/__s45TTXxps/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/__s45TTXxps?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/__s45TTXxps?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 655,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        221
      ],
      "title": "Practicing Continuous Deployment",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:30Z",
      "added": "2012-03-12T20:00:30Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=QGfxLXoMpPk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "practicing-continuous-deployment",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Practice iterative development like the pros. Release sooner, faster, and more often.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/QGfxLXoMpPk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/QGfxLXoMpPk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/QGfxLXoMpPk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 649,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [],
      "title": "Putting Python in PostgreSQL",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:11Z",
      "added": "2012-03-12T20:00:11Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=3dMq_3UUPxg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "putting-python-in-postgresql",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>PostgreSQL is pretty powerful all on it's own, but did you know you can use Python as a stored procedure language? Not only does using a familiar language make development easier, but you get the power of the standard library and PyPi to boot.  Come learn the ins and outs of putting Python in your DB. </p>",
      "thumbnail_url": "http://img.youtube.com/vi/3dMq_3UUPxg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/3dMq_3UUPxg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/3dMq_3UUPxg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 645,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        87
      ],
      "title": "pytest - rapid and simple testing with Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=9LVqBQcFmyw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "pytest-rapid-and-simple-testing-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The py.test tool presents a rapid and simple way to write tests.  This talks introduces common testing terms, basic examples and unique pytest features for writing unit- or functional tests: assertions and dependency injection mechanisms.  We also look at other features like distributing test load, new plugins and reasons why some Redhat and Mozilla people choose pytest over other approaches.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/9LVqBQcFmyw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/9LVqBQcFmyw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/9LVqBQcFmyw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 884,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        324
      ],
      "title": "Python Metaprogramming for Mad Scientists and Evil Geniuses",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:30:14Z",
      "added": "2012-03-15T21:30:14Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Adr_QuDZxuM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-metaprogramming-for-mad-scientists-and-evi",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk covers the power and metaprogramming features of Python that cater to mad scientists and evil geniuses. This will also be of interest to others who just want to use of Python in a more power (hungry) way. The core concept is that you can synthesize functions, classes and modules without a direct correspondence to source code. You can also mutate third-party objects and apps.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Adr_QuDZxuM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Adr_QuDZxuM&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Adr_QuDZxuM&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 652,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        356
      ],
      "title": "Sage: Open Source Math in Python",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:29Z",
      "added": "2012-03-12T20:00:29Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=YyEReiAYGlU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sage-open-source-math-in-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A quick introduction to Sage, an open-source mathematics package for experimentation in all areas of mathematics.  There will be some brief remarks and demos of what Sage is capable of.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/YyEReiAYGlU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/YyEReiAYGlU?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/YyEReiAYGlU?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 632,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        345,
        344
      ],
      "title": "Scalability at YouTube",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=G-lGCC4KKok",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "scalability-at-youtube",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This talk covers scalability at YouTube.  It's given by one of the original engineers at YouTube, Mike Solomon.  It's a rare glimpse into the heart of YouTube which is one of the largest websites in the world, and one of the few extremely large websites to be written in Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/G-lGCC4KKok/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/G-lGCC4KKok?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/G-lGCC4KKok?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 634,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        347
      ],
      "title": "Speedily Practical Large-Scale Tests",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=1VZfL9JVgFg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "speedily-practical-large-scale-tests",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Mozilla's projects have thousands of tests, so we've had to venture beyond vanilla test runners to keep things manageable. Our secret sauce can be used with your project as well. Reach beyond the test facilities that came with your project, harnessing pluggable test frameworks, dynamically reordering tests for speed, exploring various mocking libraries, and profiling your way to testing nirvana.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/1VZfL9JVgFg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/1VZfL9JVgFg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/1VZfL9JVgFg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 648,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        246
      ],
      "title": "Static analysis of Python extension modules using GCC",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=n6145JSeqWc",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "static-analysis-of-python-extension-modules-using",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Want to analyse C/C++ code using Python?  I've written a plugin for GCC that embeds Python inside the compiler, allowing you to write new C/C++ compilation passes in Python.  I've used this to build a static analysis tool that understands the CPython extension API, and can automatically detect reference-counting bugs, and other errors.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/n6145JSeqWc/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/n6145JSeqWc?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/n6145JSeqWc?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 635,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        212
      ],
      "title": "Stepping Through CPython",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:09Z",
      "added": "2012-03-12T20:00:09Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=XGF3Qu4dUqk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "stepping-through-cpython",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Ever wondered how CPython actually works internally?  This talk will show you.  We start with a simple Python program, then slowly step through CPython, showing in exhaustive detail what happens when it runs that program.  Along the way we'll examine the design and implementation of various major CPython subsystems and see how they fit together.  The audience should be conversant in C and Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/XGF3Qu4dUqk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/XGF3Qu4dUqk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/XGF3Qu4dUqk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 629,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        237,
        328
      ],
      "title": "Stop Mocking, Start Testing",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:08Z",
      "added": "2012-03-12T20:00:08Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Xu5EhKVZdV8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "stop-mocking-start-testing",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Project Hosting at Google Code is a large, well-established system written mostly in Python. We'll share our battle-born convictions about creating tests for test-unfriendly code and the larger topic of testing.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Xu5EhKVZdV8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Xu5EhKVZdV8?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Xu5EhKVZdV8?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 880,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        177
      ],
      "title": "Stop Writing Classes",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:15:10Z",
      "added": "2012-03-15T21:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=o9pEzgHorH0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "stop-writing-classes",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Classes are great but they are also overused.  This talk will describe examples of class overuse taken from real world code and refactor the unnecessary classes, exceptions, and modules out of them.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/o9pEzgHorH0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/o9pEzgHorH0&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/o9pEzgHorH0&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 879,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        138
      ],
      "title": "The Art of Subclassing",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:15:10Z",
      "added": "2012-03-15T21:15:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=miGolgp9xq8",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "the-art-of-subclassing",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>All problems have simple, easy-to-understand, logical wrong answers. Subclassing in Python is no exception. Avoid the common pitfalls and learn everything you need to know about making effective use of inheritance in Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/miGolgp9xq8/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/miGolgp9xq8&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/miGolgp9xq8&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 885,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        417
      ],
      "title": "Through The Ether And Back Again: What Happens To A Packet When You Send It",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-15T21:30:15Z",
      "added": "2012-03-15T21:30:15Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Xk6gQ6s2QjU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "through-the-ether-and-back-again-what-happens-to",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Many - perhaps even most - Python software involves a network, at least a little bit.  You've probably written some yourself.  But do you really know what happens - to your kernel, to your ethernet card, to Python - when you call socket.send()?  Come to this talk and find out: if you dare.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Xk6gQ6s2QjU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Xk6gQ6s2QjU&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Xk6gQ6s2QjU&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 642,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        350
      ],
      "title": "Throwing Together Distributed Services With Gevent",
      "quality_notes": "",
      "recorded": "2012-03-09",
      "state": 1,
      "updated": "2012-03-12T20:00:10Z",
      "added": "2012-03-12T20:00:10Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=tYk4_Nzl-Gg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "throwing-together-distributed-services-with-geven",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this talk we learn how to throw together a distributed system using gevent and a simple framework called gservice. We'll go from nothing to a distributed messaging system ready for production deployment based on experiences building scalable, distributed systems at Twilio.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/tYk4_Nzl-Gg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/tYk4_Nzl-Gg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/tYk4_Nzl-Gg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 621,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        48
      ],
      "title": "DevOps for Python: Doing More With Less",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=sdkAXM36C7M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "devops-for-python-doing-more-with-less",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The world of infrastructure as code is becoming far more pervasive and many Python developers are trying to find a way to get started. This class will get you up and running with Chef and Fabric to manage your systems be they in the cloud or under your desk.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/sdkAXM36C7M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/sdkAXM36C7M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/sdkAXM36C7M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 616,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        337
      ],
      "title": "Documenting Your Project With Sphinx",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=L-fXOoxrt0M",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "documenting-your-project-with-sphinx",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Python projects can succeed or fail because of their documentation.\r\nThanks to Sphinx, Python now has a \u201cdocumentation framework\u201d with\r\nindexing, syntax highlighting, and integration with your code.\r\nStudents will be given a small undocumented Python package,\r\nand during the exercises they will give the package\r\na tutorial and reference manual.\r\nPlus: deployment and theming!</p>",
      "thumbnail_url": "http://img.youtube.com/vi/L-fXOoxrt0M/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/L-fXOoxrt0M?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/L-fXOoxrt0M?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 614,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        335
      ],
      "title": "High Performance Python I",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Iw9-GckD-gQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "high-performance-python-i",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>At EuroPython 2011 I ran a very hands-on tutorial for High Performance Python techniques. This updated tutorial will cover profiling, PyPy, Cython, numpy, NumExpr, ShedSkin, multiprocessing, ParallelPython and pyCUDA. Here's a 55 page PDF write-up of the EuroPython material: http://ianozsvald.com/2011/07/25/high-performance-python-tutorial-v0-2-from-europython-2011/</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Iw9-GckD-gQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Iw9-GckD-gQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Iw9-GckD-gQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 620,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        340
      ],
      "title": "High Performance Python II",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=xHqlzuPq_qQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "high-performance-python-ii",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>In this tutorial, I will cover how to write very fast Python code for data analysis.  I will briefly introduce NumPy and illustrate how fast code for Python is written in SciPy using tools like Fwrap / F2py and Cython.   I will also describe interesting new approaches to creating fast code that is leading changes to NumPy on a fundamental level.  </p>",
      "thumbnail_url": "http://img.youtube.com/vi/xHqlzuPq_qQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/xHqlzuPq_qQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/xHqlzuPq_qQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 615,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        336,
        64
      ],
      "title": "Introduction to Game Development",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=duc3jYgAaR0",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-game-development",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial will walk the attendees from some introductory game development theory (what makes a good game) and through development of a simple game (how to make a good game) with time left over for some experimentation and exploration of different types of games.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/duc3jYgAaR0/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/duc3jYgAaR0?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/duc3jYgAaR0?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 622,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        220
      ],
      "title": "Introduction to Interactive Predictive Analytics in Python with scikit-learn",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Zd5dfooZWG4",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-interactive-predictive-analytics",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The goal of this tutorial is to give the attendee a first experience of machine learning tools applied to practical software engineering tasks such as language detection of tweets, topic classification of web pages, sentiment analysis of customer products reviews and facial recognition in pictures from the web or from your own webcam.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Zd5dfooZWG4/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Zd5dfooZWG4?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Zd5dfooZWG4?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 623,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        38
      ],
      "title": "Making interactive maps for the web",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:07Z",
      "added": "2012-03-12T20:00:07Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=g0CankXpFZg",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "making-interactive-maps-for-the-web",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial teaches students how to create beautiful, interactive maps for the web. When asked to display geodata, most developers decide to put some big red markers on an embeddable Google Map and call it a day. If you're interested in creating maps that are more beautiful, more interactive, and more usable, this tutorial is for you.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/g0CankXpFZg/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/g0CankXpFZg?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/g0CankXpFZg?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 618,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        338
      ],
      "title": "Optimize Performance and Scalability with Parallelism and Concurrency",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=ULdDuwf48kM",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "optimize-performance-and-scalability-with-paralle",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>From how the operating system handles your requests through design principles on how to use concurrency and parallelism to optimize your program's performance and scalability.  We will cover processes, threads, generators, coroutines, non-blocking IO, and the gevent library.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/ULdDuwf48kM/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/ULdDuwf48kM?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/ULdDuwf48kM?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 617,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        332
      ],
      "title": "Plotting with matplotlib",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=P7SVi0YTIuE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "plotting-with-matplotlib",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>When it comes to plotting with Python many people think about matplotlib.\r\nIt is widely used and provides a simple interface for creating a wide variety\r\nof plots from very simple diagrams to sophisticated animations.\r\nThis tutorial is a hands-on introduction that teaches the basics of matplotlib.\r\nStudents will learn how to create publication-ready plots with just a few lines\r\nof Python. \r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/P7SVi0YTIuE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/P7SVi0YTIuE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/P7SVi0YTIuE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 613,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        98
      ],
      "title": "Python Epiphanies",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Pi9NpxAvYSs",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "python-epiphanies",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial is for software developers who've been using Python with success for a while but are looking for a deeper understanding of the language.  It demystifies a number of language features that are often misunderstood.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Pi9NpxAvYSs/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Pi9NpxAvYSs?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Pi9NpxAvYSs?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 619,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        339
      ],
      "title": "Social Network Analysis with Python",
      "quality_notes": "",
      "recorded": "2012-03-08",
      "state": 1,
      "updated": "2012-03-12T20:00:06Z",
      "added": "2012-03-12T20:00:06Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=qgGqaBAEy3Q",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "social-network-analysis-with-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Social Network data permeates our world -- yet we often don't know what to do with it. In this tutorial, I will introduce both theory and practice of Social Network Analysis -- gathering, analyzing and visualizing data using Python and other open-source tools. I will walk the attendees through an entire project, from gathering and cleaning data to presenting results.\r\n\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/qgGqaBAEy3Q/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/qgGqaBAEy3Q?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/qgGqaBAEy3Q?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 608,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        333
      ],
      "title": "Bayesian statistics made (as) simple (as possible)",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=bobeo5kFz1g",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "bayesian-statistics-made-as-simple-as-possible",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial is an introduction to Bayesian statistics using Python.  My goal is to help participants understand the concepts and solve real problems.  We will use material from my book, Think Stats: Probability and Statistics for Programmers (O\u2019Reilly Media).</p>",
      "thumbnail_url": "http://img.youtube.com/vi/bobeo5kFz1g/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/bobeo5kFz1g?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/bobeo5kFz1g?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 611,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        273
      ],
      "title": "Data analysis in Python with pandas ",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=w26x-z-BdWQ",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "data-analysis-in-python-with-pandas",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The tutorial will give a hands-on introduction to manipulating and analyzing large and small structured data sets in Python using the pandas library. While the focus will be on learning the nuts and bolts of the library's features, I also aim to demonstrate a different way of thinking regarding structuring data in memory for manipulation and analysis.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/w26x-z-BdWQ/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/w26x-z-BdWQ?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/w26x-z-BdWQ?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 610,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        25
      ],
      "title": "Django in Depth",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=t_ziKY1ayCo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "django-in-depth",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>A tutorial that goes beyond all other Django tutorials; we'll dive deep into the guts of the framework, and learn how each commonly-used component -- ORM, templates, HTTP handling, views and the admin -- work from the bottom up, covering both public and internal APIs in excruciating detail.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/t_ziKY1ayCo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/t_ziKY1ayCo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/t_ziKY1ayCo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 607,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        332
      ],
      "title": "Faster Python Programs through Optimization",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:04Z",
      "added": "2012-03-12T20:00:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Bs6-sai1fKE",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "faster-python-programs-through-optimization",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This tutorial provides an overview of techniques to improve the performance of Python programs. The focus is on concepts such as profiling, difference of data structures and algorithms as well as a selection of tools and libraries that help to speed up Python.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Bs6-sai1fKE/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Bs6-sai1fKE?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Bs6-sai1fKE?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 612,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        28,
        334,
        104
      ],
      "title": "How to get the most out of your PyPy",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=oZw8m_lyhvo",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "how-to-get-the-most-out-of-your-pypy",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>For many applications PyPy can provide performance benefits right out of the box. However, little details can push your application to perform much better.  In this tutorial we'll give you insights on how to push pypy to it's limites. We'll focus on understanding the performance characteristics of PyPy, and learning the analysis tools in order to maximize your applications performance.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/oZw8m_lyhvo/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/oZw8m_lyhvo?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/oZw8m_lyhvo?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 604,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        96
      ],
      "title": "Introduction to Django",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:03Z",
      "added": "2012-03-12T20:00:03Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=hp5ymCrD9yw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "introduction-to-django",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>The Django framework is a fast, flexible, easy to learn, and easy to use framework for designing and deploying web sites and services using Python.  In this session, we'll cover the fundamentals of development with Django, generate a Django data model, and put together a simple web site using the framework.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/hp5ymCrD9yw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/hp5ymCrD9yw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/hp5ymCrD9yw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 605,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        330,
        329,
        331
      ],
      "title": "IPython in-depth: high-productivity interactive and parallel python",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:04Z",
      "added": "2012-03-12T20:00:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=2G5YTlheCbw",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "ipython-in-depth-high-productivity-interactive-a",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>IPython provides tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer.\r\n\r\nWe will show how to use IPython in different ways, as: an interactive shell, an embedded shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/2G5YTlheCbw/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/2G5YTlheCbw?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/2G5YTlheCbw?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 914,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        419,
        109
      ],
      "title": "MongoDB and Python",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-16T04:15:04Z",
      "added": "2012-03-16T04:15:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=SULKL7TMRsU",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "mongodb-and-python",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>This intermediate-level class will teach you techniques using the popular NoSQL database MongoDB, its driver PyMongo, and the object-document mapper Ming to write maintainable, high-performance, and scalable applications. We will cover everything you need to become an effective Ming/MongoDB developer from basic PyMongo queries to high-level object-document mapping setups in Ming.\r\n</p>",
      "thumbnail_url": "http://img.youtube.com/vi/SULKL7TMRsU/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/SULKL7TMRsU&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/SULKL7TMRsU&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 875,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        337
      ],
      "title": "SQL for Python Developers",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-15T21:00:04Z",
      "added": "2012-03-15T21:00:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=Thd8yoBou7k",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "sql-for-python-developers",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Relational databases are often the bread-and-butter of large-scale data storage, yet they are often poorly understood by Python programmers. Organizations even split programmers into SQL and front-end teams, each of which jealously guards its turf. These tutorials will take what you already know about Python programming, and advance into a new realm: SQL programming and database design.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/Thd8yoBou7k/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/Thd8yoBou7k&amp;hl=en&amp;fs=1\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/Thd8yoBou7k&amp;hl=en&amp;fs=1\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 609,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        97
      ],
      "title": "Web scraping: Reliably and efficiently pull data from pages that don't expect it",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:05Z",
      "added": "2012-03-12T20:00:05Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=52wxGESwQSA",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "web-scraping-reliably-and-efficiently-pull-data",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Exciting information is trapped in web pages and behind HTML forms. In this tutorial, you'll learn how to parse those pages and when to apply advanced techniques that make scraping faster and more stable.\r\n\r\nWe'll cover parallel downloading with Twisted, gevent, and others; analyzing sites behind SSL; driving JavaScript-y sites with Selenium; and evading common anti-scraping techniques.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/52wxGESwQSA/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/52wxGESwQSA?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/52wxGESwQSA?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  },
  {
    "pk": 606,
    "model": "videos.video",
    "fields": {
      "whiteboard": "",
      "category": 17,
      "speakers": [
        127
      ],
      "title": "Writing a Pyramid application",
      "quality_notes": "",
      "recorded": "2012-03-07",
      "state": 1,
      "updated": "2012-03-12T20:00:04Z",
      "added": "2012-03-12T20:00:04Z",
      "video_mp4_length": null,
      "description": "",
      "video_mp4_url": null,
      "tags": [],
      "copyright_text": "",
      "source_url": "https://www.youtube.com/watch?v=NBSosX8xiRk",
      "video_webm_url": null,
      "video_ogv_length": null,
      "slug": "writing-a-pyramid-application",
      "video_ogv_url": null,
      "video_webm_length": null,
      "summary": "<p>Pyramid is the web framework at the core of the Pylons Project. It's a \"pay only for what you eat\" framework. You can get started easily and learn new concepts as you go, and only if you need them. It's simple, well tested, well documented, and fast. This course will present Pyramid and lead you through the creation of a an application as the concepts from the framework are introduced.</p>",
      "thumbnail_url": "http://img.youtube.com/vi/NBSosX8xiRk/hqdefault.jpg",
      "embed": "<object width=\"425\" height=\"344\"><param name=\"movie\" value=\"http://www.youtube.com/v/NBSosX8xiRk?version=3&amp;f=videos&amp;app=youtube_gdata\"><param name=\"allowFullScreen\" value=\"true\"><param name=\"allowscriptaccess\" value=\"always\"><embed src=\"http://www.youtube.com/v/NBSosX8xiRk?version=3&amp;f=videos&amp;app=youtube_gdata\" allowscriptaccess=\"always\" height=\"344\" width=\"425\" allowfullscreen=\"true\" type=\"application/x-shockwave-flash\"></embed></object>"
    }
  }
]
